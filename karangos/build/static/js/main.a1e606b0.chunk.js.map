{"version":3,"sources":["img/karangos.png","ui/MainMenu.js","ui/TopBar.js","ui/FooterBar.js","ui/ConfirmDialog.js","routed/KarangosList2.js","routed/KarangosForm.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","menuLink","color","palette","text","primary","textDecoration","MainMenu","classes","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","edge","className","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","to","root","flexGrow","logo","width","TopBar","AppBar","position","Toolbar","src","logoImg","alt","secondary","toolbar","backgroundColor","background","paper","minHeight","bottom","link","light","FooterBar","Typography","variant","align","fontSize","href","ConfirmDialog","title","isOpen","children","result","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","table","minWidth","dataGrid","visibility","justifyContent","paddingRight","margin","KarangosList","karangos","setKarangos","deletable","setDeletable","dialogOpen","setDialogOpen","sbOpen","setSbOpen","sbSeverity","setSbSeverity","sbMessage","setSbMessage","history","useHistory","getData","a","axios","get","response","data","length","console","error","delete","message","handleSbClose","useEffect","setTimeout","columns","field","headerName","headerAlign","flex","sortComparator","v1","v2","Number","renderCell","params","Checkbox","checked","value","readOnly","valueFormatter","toLocaleString","style","currency","push","deleteItem","Snackbar","autoHideDuration","elevation","severity","size","startIcon","Paper","rows","pageSize","autoHeight","disableSelectionOnClick","form","maxWidth","display","flexWrap","marginBottom","marginTop","checkbox","alignItems","formatChars","KarangosForm","marca","modelo","cor","ano_fabricacao","Date","getFullYear","importado","placa","preco","karango","setKarango","importadoChecked","setImportadoChecked","snackState","setSnackState","disabled","label","btnSendState","setBtnSendState","setError","isModified","setIsModified","setTitle","useParams","handleInputChange","property","karangoTemp","importadoCheckedTemp","target","newState","toUpperCase","validate","errorTemp","isValid","trim","includes","isNaN","put","post","Alert","props","handleSnackClose","reason","onSubmit","preventDefault","saveData","TextField","onChange","fullWidth","required","helperText","select","i","years","map","year","type","onFocus","InputProps","startAdornment","InputAdornment","mask","FormControl","FormControlLabel","control","createMuiTheme","main","yellow","pink","box","default","paddingBotton","routed","padding","fontFamily","typography","Main","Box","path","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1e606b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/karangos.637f9a06.png\";","import React from 'react';\n//import Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    menuLink: {\n\n        color: theme.palette.text.primary,\n        textDecoration: 'none'\n    }\n  }));\n\nexport default function MainMenu() {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            {/*<Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                Open Menu\n            </Button>*/}\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                <MenuIcon />\n            </IconButton>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>\n                    <Link to=\"/list\" className={classes.menuLink}>Listagem de Karangos</Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                    <Link to=\"/new\" className={classes.menuLink}>Cadastrar Novo Karango</Link>\n                </MenuItem>\n                {/*<MenuItem onClick={handleClose}>Logout</MenuItem>*/}\n            </Menu>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n//import Typography from '@material-ui/core/Typography';\n//import IconButton from '@material-ui/core/IconButton';\n//import MenuIcon from '@material-ui/icons/Menu';\nimport logoImg from '../img/karangos.png'\nimport MainMenu from './MainMenu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  logo: {\n    width: '300px'\n  }\n}));\n\nexport default function TopBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar >\n          {/*<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>*/}\n            <MainMenu/>\n            <img src={logoImg} className={classes.logo} alt=\"Logotipo Karangos\"/>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import { Typography } from '@material-ui/core';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LocalCafeTwoToneIcon from '@material-ui/icons/LocalCafeTwoTone';\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        //backgroundColor: 'yellow',\n        width: '100%',\n        color: theme.palette.text.secondary\n    },\n    toolbar: {\n        backgroundColor: theme.palette.background.paper,\n        minHeight: '40px',\n        // Posicionando a barra no rodapé da página\n        width: '100%',\n        position: 'fixed',\n        bottom: 0\n    },\n    link: {\n        color: theme.palette.secondary.light,\n        textDecoration: 'none',         // tira o sublinhado do link\n        '&:hover': {                    // mouse passando sobre o link\n            textDecoration: 'underline' // retorna o sublinhado\n        }\n    }\n}));\n\nexport default function FooterBar() {\n    const classes = useStyles();\n    return (\n        <Toolbar className={classes.toolbar}>\n            <Typography variant=\"caption\" align=\"center\" className={classes.text}>\n                Desenvolvido com <LocalCafeTwoToneIcon fontSize=\"small\"/> por<a href=\"mailto:professor@faustocintra.com.br\" className={classes.link}>Prof. Fausto Cintra</a>\n            </Typography>\n        </Toolbar>\n    )\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function ConfirmDialog({ title = 'Alerta', isOpen = false, onClose, children }) {\n  /*\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  */\n\n  const handleClose = (result) => {\n    // Só chama a função onClose se a prop correspondente tiver sido passada\n    if (onClose) onClose(result);\n  };\n\n  return (\n    <div>\n      {/*<Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>*/}\n      <Dialog\n        open={isOpen}\n        onClose={() => handleClose(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n           {children}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose(true)} color=\"primary\">\n            Ok\n          </Button>\n          <Button onClick={() => handleClose(false)} color=\"primary\" autoFocus>\n            Cancelar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport { useHistory } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650,\n  },\n  dataGrid: {\n    '& .MuiDataGrid-row button': {       // Esconde os botões na linha de tabela \"normal\"\n      visibility: 'hidden'\n    },\n    '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\n      visibility: 'visible'\n    }\n  },\n  toolbar: {\n    justifyContent: 'flex-end',\n    paddingRight: 0,\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nexport default function KarangosList() {\n  const classes = useStyles()\n\n  // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\n  const [karangos, setKarangos] = useState([])\n  const [deletable, setDeletable] = useState()        // Código do registro a ser excluído\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n  const [sbOpen, setSbOpen] = useState(false)\n  const [sbSeverity, setSbSeverity] = useState('success')\n  const [sbMessage, setSbMessage] = useState('Exclusão realizada com sucesso.')\n\n  const history = useHistory()\n\n  useEffect(() => {\n    \n    setTimeout(() => getData(), 100)\n  }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\n  // é executado apenas uma vez, no carregamento inicial do componente\n\n  async function getData() {\n    try { // tenta buscar os dados\n      let response = await axios.get('https://api.faustocintra.com.br/karangos?by=marca,modelo')\n      if (response.data.length > 0) setKarangos(response.data)\n    }\n    catch (error) {\n      console.error(error)\n    }\n  }\n\n  async function deleteItem() {\n    try {\n      await axios.delete(`https://api.faustocintra.com.br/karangos/${deletable}`)\n      getData()     // Atualiza os dados da tabela\n      setSbSeverity('success')\n      setSbMessage('Exclusão efetuada com sucesso.')\n    }\n    catch (error) {\n      setSbSeverity('error')\n      setSbMessage('ERRO: ' + error.message)\n    }\n    setSbOpen(true)   // Exibe a snackbar\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false)\n\n    // Se o usuário concordou com a exclusão \n    if (result) deleteItem()\n  }\n\n  function handleDelete(id) {\n    setDeletable(id)\n    setDialogOpen(true)\n  }\n\n  function handleSbClose() {\n    setSbOpen(false)    // Fecha a snackbar\n  }\n\n  const columns = [\n    {\n      field: 'id',\n      headerName: 'Cód.',\n      align: 'right',\n      headerAlign: 'right',\n      flex: true,\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n    },\n    {\n      field: 'marca',\n      headerName: 'Marca',\n      flex: true\n    },\n    {\n      field: 'modelo',\n      headerName: 'Modelo',\n      flex: true\n    },\n    {\n      field: 'cor',\n      headerName: 'Cor',\n      align: 'center',\n      headerAlign: 'center',\n      flex: true\n    },\n    {\n      field: 'ano_fabricacao',\n      headerName: 'Ano',\n      align: 'center',\n      headerAlign: 'center',\n      flex: true,\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n    },\n    {\n      field: 'importado',\n      headerName: 'Importado?',\n      align: 'center',\n      headerAlign: 'center',\n      flex: true,\n      renderCell: params => (\n        <Checkbox checked={params.value === \"1\"} readOnly />\n      )\n    },\n    {\n      field: 'placa',\n      headerName: 'Placa',\n      align: 'center',\n      headerAlign: 'center',\n      flex: true\n    },\n    {\n      field: 'preco',\n      headerName: 'Preço',\n      align: 'right',\n      headerAlign: 'right',\n      flex: true,\n      valueFormatter: params => (\n        Number(params.value).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })\n      ),\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n    },\n    {\n      field: 'editar',\n      headerName: 'Editar',\n      align: 'center',\n      headerAlign: 'center',\n      flex: true,\n      renderCell: params => (\n        <IconButton aria-label=\"editar\" onClick={() => history.push(`/edit/${params.id}`)}>\n          <EditIcon />\n        </IconButton>\n      )\n    },\n    {\n      field: 'excluir',\n      headerName: 'Excluir',\n      align: 'center',\n      headerAlign: 'center',\n      flex: true,\n      renderCell: params => (\n        <IconButton aria-label=\"excluir\" onClick={() => handleDelete(params.id)}>\n          <DeleteIcon color=\"error\" />\n        </IconButton>\n      )\n    },\n  ];\n\n  return (\n    <>\n      <ConfirmDialog\n        isOpen={dialogOpen}\n        onClose={handleDialogClose}>\n        Deseja realmente excluir este karango?\n      </ConfirmDialog>\n\n      <Snackbar\n        open={sbOpen}\n        autoHideDuration={6000}\n        onClose={handleSbClose}>\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleSbClose}\n          severity={sbSeverity}>\n          {sbMessage}\n        </MuiAlert>\n      </Snackbar>\n\n      <h1>Listagem de Karangos</h1>\n      <Toolbar\n        className={classes.toolbar}>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          size=\"large\"\n          startIcon={<AddBoxIcon />} onClick={() => history.push('/new')}>\n          Novo Karango\n        </Button>\n      </Toolbar>\n      <Paper\n        elevation={4}>\n        <DataGrid\n          className={classes.dataGrid}\n          rows={karangos}\n          columns={columns}\n          pageSize={5}\n          autoHeight={true}\n          disableSelectionOnClick={true} />\n      </Paper>\n    </>\n  )\n}\n\n/*\n  git init\n  git origin remote add <url do repositorio>\n*/","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Checkbox, FormControl, FormControlLabel, Toolbar } from '@material-ui/core';\nimport InputMask from 'react-input-mask';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory, useParams } from 'react-router-dom';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nconst useStyles = makeStyles(() => ({\n    form: {\n        //backgroundColor: 'green',  // Cor de debug\n        maxWidth: '80%',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        '& .MuiFormControl-root': {\n            minWidth: '200px',\n            maxWidth: '500px',\n            marginBottom: '24px'\n        }\n    },\n    toolbar: {\n        marginTop: '36px',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-around',\n    },\n    checkbox: {\n        alignItems: 'center'\n    }\n}))\n\n/* \nClasses de caracteres de entrada para a máscara do campo placa\n    1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n    2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\n    3) 2ª posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n*/\n\n// Representando as classes de caracteres da máscara como um objeto\nconst formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n}\n\n// Finalmente, a máscara de entrada do campo placa\nconst placaMask = 'AAA-0#00'\n\n// Máscara para CPF: '000.000.000-00'\n// Máscara para CNPJ: '00.000.000/0000-00'\n\n\nexport default function KarangosForm() {\n\n    const classes = useStyles()\n\n    const [karango, setKarango] = useState({\n        id: null,\n        marca: '',\n        modelo: '',\n        cor: '',\n        ano_fabricacao: (new Date()).getFullYear(),  // Ano corrente\n        importado: '0',\n        placa: '',\n        preco: 0\n    })\n\n    const [currentId, setCurrentId] = useState()\n    const [importadoChecked, setImportadoChecked] = useState()\n\n    const [snackState, setSnackState] = useState({\n        open: false,\n        severity: 'success',\n        message: 'Karango salvo com sucesso.'\n    })\n\n    const [btnSendState, setBtnSendState] = useState({\n        disabled: false,\n        label: 'Enviar'\n    })\n\n    const [error, setError] = useState({\n        marca: '',\n        modelo: '',\n        cor: '',\n        placa: '',\n        preco: ''\n    })\n\n    const [isModified, setIsModified] = useState(false)\n\n    const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n\n    const [title, setTitle] = useState('Cadastrar Novo Karango')\n\n    const history = useHistory()\n    const params = useParams()\n\n    useEffect(() => {\n\n        // Verificac se tem o parâmetro id na rota. Se tiver, temos que buscar\n        // os dados do registro no back-end para edição\n        if (params.id) {\n            setTitle('Editando Karango')\n            getData(params.id)\n        }\n    }, [])\n\n    async function getData(id) {\n        try {\n            let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`)\n            setKarango(response.data)\n        }\n        catch (error) {\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'Não foi possível carregar os dados para edição.'\n            })\n        }\n    }\n\n    function handleInputChange(event, property) {\n\n        const karangoTemp = { ...karango }\n        let importadoCheckedTemp = importadoChecked\n\n        // Se houver id no event.target, ele será o nome da propriedade\n        // senão, usaremos o valor do segundo parâmetro\n        if (event.target.id) property = event.target.id\n\n        if (property === 'importado') {\n            const newState = !importadoChecked\n            //setKarango({ ...karango, importado: (newState ? '1' : '0') })\n            karangoTemp.importado = (newState ? '1' : '0')\n\n            //setImportadoChecked(newState)\n            importadoCheckedTemp = newState\n        }\n        else if (property === 'placa') {\n            //setKarango({ ...karango, [property]: event.target.value.toUpperCase() })\n            karangoTemp[property] = event.target.value.toUpperCase()\n        }\n        else {\n            // Quando o nome de uma propriedade de um objeto aparece entre [],\n            // isso se chama \"propriedade calculada\". O nome da propriedade vai\n            // corresponder à avaliação da expressão entre os colchetes\n            //setCurrentId(event.target.id)\n            //setKarango({ ...karango, [property]: event.target.value })\n            karangoTemp[property] = event.target.value\n        }\n        setKarango(karangoTemp)\n        setImportadoChecked(importadoCheckedTemp)\n        setIsModified(true)   // O formulário foi modificado\n        validate(karangoTemp)       // Dispara a validação\n    }\n\n    function validate(data) {\n\n        const errorTemp = {\n            marca: '',\n            modelo: '',\n            cor: '',\n            placa: '',\n            preco: ''\n        }\n        let isValid = true\n\n        // Validação do campo marca\n        if (data.marca.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.marca = 'A marca deve ser preenchida'\n            isValid = false\n        }\n\n        // Validação do campo modelo\n        if (data.modelo.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.modelo = 'A modelo deve ser preenchido'\n            isValid = false\n        }\n\n        // Validação do campo cor\n        if (data.cor.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.cor = 'Escolha uma cor'\n            isValid = false\n        }\n\n        // Validação do campo placa\n        // valor válido não pode ser string vazia e nem conter o caracter _ (sublinhado)\n        if (data.placa.trim() === '' || data.placa.includes('_')) {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.placa = 'A placa deve ser corretamente preenchida'\n            isValid = false\n        }\n\n        // Validação do campo preco\n        if (isNaN(data.preco) || Number(data.preco) <= 0) {     // trim(): retira os espaços em branco do nício e do final de uma string\n            errorTemp.preco = 'O preço deve ser preenchido e maior que zero'\n            isValid = false\n        }\n\n        setError(errorTemp)\n        return isValid\n\n\n    }\n\n    function years() {\n        let result = []\n        for (let i = (new Date()).getFullYear(); i >= 1900; i--) result.push(i)\n        return result\n    }\n\n    async function saveData() {\n        try {\n            // Desabilitar o botão Enviar\n            setBtnSendState({ disabled: true, label: 'Enviando...' })\n\n            // Se o registro já existe (edição)\n            if (params.id) await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango)\n\n            // Registro não existe, cria um novo (verbo HTTP POST)\n            else await axios.post(`https://api.faustocintra.com.br/karangos`, karango)\n\n            //alert('Dados salvos com sucesso!')\n            setSnackState({\n                open: true,\n                severity: 'success',\n                message: 'Karango salvo com sucesso!'\n            })\n            // A FAZER: retornar à página de listagem\n        }\n        catch (error) {\n            //alert('ERRO: ' + error.message)\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'ERRO: ' + error.message\n            })\n        }\n        // Reabilita o botão Enviar\n        setBtnSendState({ disabled: false, label: 'Enviar' })\n    }\n\n    function handleSubmit(event) {\n\n        event.preventDefault()   // Evitar o recarregamento da página\n\n        // Só salva os dados se forem válidos\n        if (validate(karango)) saveData()\n\n    }\n\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    function handleSnackClose(event, reason) {\n        // Evita que a Snackbar seja fechada clicando-se fora dela\n        if (reason === 'clickway') return\n        setSnackState({ ...snackState, open: false })  // Fecha a Snackbar\n\n        // Retorna à página de listagem\n        history.push('/list')\n    }\n\n    function handleDialogClose(result) {\n        setDialogOpen(false)\n\n        // Se o usuário concordou em voltar \n        if (result) history.push('/list')\n    }\n\n    function handleGoBack() {\n\n        // Se o formulário estiver modificado, mostramos o diálogo de confirmação\n        if (isModified) setDialogOpen(true)\n\n        // Senão, voltamos diretamente à de listagem\n        else history.push('/list')\n    }\n\n    return (\n        <>\n            <ConfirmDialog\n                isOpen={dialogOpen}\n                onClose={handleDialogClose}>\n                Há dados não salvos. Deseja realmente voltar?\n            </ConfirmDialog>\n            <Snackbar\n                open={snackState.open}\n                autoHideDuration={6000}\n                onClose={handleSnackClose}>\n                <Alert\n                    onClose={handleSnackClose}\n                    severity={snackState.severity}>\n                    {snackState.message}\n                </Alert>\n            </Snackbar>\n            <h1>{title}</h1>\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <TextField\n                    id=\"marca\"\n                    label=\"Marca\"\n                    variant=\"filled\"\n                    value={karango.marca}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.marca !== ''}\n                    helperText={error.marca}\n                />\n                <TextField\n                    id=\"modelo\"\n                    label=\"Modelo\"\n                    variant=\"filled\"\n                    value={karango.modelo}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.modelo !== ''}\n                    helperText={error.modelo}\n                />\n                <TextField\n                    id=\"cor\"\n                    label=\"Cor\"\n                    variant=\"filled\"\n                    value={karango.cor}\n                    onChange={event => handleInputChange(event, 'cor')}\n                    select fullWidth\n                    required\n                    error={error.cor !== ''}\n                    helperText={error.cor} >\n                    <MenuItem value=\"Amarelo\">Amarelo</MenuItem>\n                    <MenuItem value=\"Azul\">Azul</MenuItem>\n                    <MenuItem value=\"Bege\">Bege</MenuItem>\n                    <MenuItem value=\"Branco\">Branco</MenuItem>\n                    <MenuItem value=\"Cinza\">Cinza</MenuItem>\n                    <MenuItem value=\"Dourado\">Dourado</MenuItem>\n                    <MenuItem value=\"Laranja\">Laranja</MenuItem>\n                    <MenuItem value=\"Marrom\">Marrom</MenuItem>\n                    <MenuItem value=\"Prata\">Prata</MenuItem>\n                    <MenuItem value=\"Preto\">Preto</MenuItem>\n                    <MenuItem value=\"Roxo\">Roxo</MenuItem>\n                    <MenuItem value=\"Verde\">Verde</MenuItem>\n                    <MenuItem value=\"Vermelho\">Vermelho</MenuItem>\n                </TextField>\n                <TextField\n                    id=\"ano_fabricacao\"\n                    label=\"Ano de Fabricação\"\n                    variant=\"filled\"\n                    value={karango.ano_fabricacao}\n                    onChange={event => handleInputChange(event, 'ano_fabricacao')}\n                    select fullWidth >\n                    {years().map(year => <MenuItem value={year} key={year}>{year}</MenuItem>)}\n                </TextField>\n                <TextField\n                    id=\"preco\"\n                    label=\"Preço\"\n                    variant=\"filled\"\n                    value={karango.preco}\n                    onChange={handleInputChange}\n                    fullWidth type=\"number\"\n                    onFocus={event => event.target.select()}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n                    }}\n                    required\n                    error={error.preco !== ''}\n                    helperText={error.preco}\n                />\n                <InputMask\n                    formatChars={formatChars}\n                    mask={placaMask} id=\"placa\"\n                    onChange={event => handleInputChange(event, 'placa')}\n                    value={karango.placa} >\n                    {() => <TextField\n                        label=\"Placa\"\n                        variant=\"filled\"\n                        fullWidth\n                        required\n                        error={error.placa !== ''}\n                        helperText={error.placa}\n                    />}\n                </InputMask>\n                <FormControl\n                    className={classes.checkbox}\n                    fullWidth >\n                    <FormControlLabel\n                        control={<Checkbox checked={importadoChecked}\n                            onChange={handleInputChange} id=\"importado\" />}\n                        label=\"Importado?\" />\n                </FormControl>\n                <Toolbar className={classes.toolbar} >\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        type=\"submit\"\n                        disabled={btnSendState.disabled}>\n\n                        {btnSendState.label}\n\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        onClick={handleGoBack} >\n                        Voltar\n                    </Button>\n                </Toolbar>\n\n                {/* <div>{JSON.stringify(karango)}<br />currentId: {currentId}</div> */}\n            </form>\n        </>\n    )\n}\n","//import logo from './logo.svg';\n//import './App.css';\n//import Button from '@material-ui/core/Button'\nimport TopBar from './ui/TopBar'\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport yellow from '@material-ui/core/colors/yellow';\nimport pink from '@material-ui/core/colors/pink';\nimport FooterBar from './ui/FooterBar';\nimport { Box } from '@material-ui/core';\n//import MainMenu from './ui/MainMenu';\nimport KarangosList from './routed/KarangosList2';\nimport KarangosForm from './routed/KarangosForm';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: yellow[500],\n    },\n    secondary: {\n      main: pink[500],\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: theme.palette.background.default,\n    minHeight: '100vh',   // 100% da altura da área visível\n    paddingBotton: '42px' // Para que o conteúdo não fique escondido atrás do footer\n  },\n  routed: {\n    padding: '25px',\n    color: theme.palette.text.primary,\n    fontFamily: theme.typography.fontFamily\n  }\n}));\n\nfunction Main() {\n  const classes = useStyles();\n  return (\n    <Box className={classes.box}>\n      <BrowserRouter>\n        <TopBar />\n        <Box id=\"routed\" className={classes.routed}>\n          <Switch>\n            <Route path=\"/list\">\n              <KarangosList/>\n            </Route>\n            <Route path=\"/new\">\n              <KarangosForm/>\n            </Route>\n            {/* :id é um parâmetro ( nomes de Parâmetros começam com dois pontos ) */} \n            <Route path=\"/edit/:id\">\n              <KarangosForm/>\n            </Route>\n          </Switch>\n        </Box>\n        <FooterBar />\n      </BrowserRouter>\n    </Box>\n  )\n}\n\nfunction App() {\n  return (\n    /*<div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Projeto Karangos</h1>\n        <Button variant=\"contained\" color=\"primary\">Click Aqui</Button>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Learn React</a>\n      </header>\n    </div>*/\n    <div>\n      <ThemeProvider theme={theme}>\n        <Main />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}