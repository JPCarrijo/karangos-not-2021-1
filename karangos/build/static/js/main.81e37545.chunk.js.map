{"version":3,"sources":["img/karangos.png","ui/MainMenu.js","ui/TopBar.js","ui/FooterBar.js","ui/ConfirmDialog.js","routed/KarangosList2.js","routed/KarangosForm.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","menuLink","color","palette","text","primary","textDecoration","MainMenu","classes","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","edge","className","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","to","root","flexGrow","logo","width","TopBar","AppBar","position","Toolbar","src","logoImg","alt","secondary","toolbar","backgroundColor","background","paper","minHeight","bottom","link","light","FooterBar","Typography","variant","align","fontSize","href","ConfirmDialog","title","isOpen","children","result","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","table","minWidth","dataGrid","visibility","justifyContent","paddingRight","margin","KarangosList","karangos","setKarangos","deletable","setDeletable","dialogOpen","setDialogOpen","sbOpen","setSbOpen","sbSeverity","setSbSeverity","sbMessage","setSbMessage","history","useHistory","getData","a","axios","get","response","data","length","console","error","delete","message","handleSbClose","useEffect","columns","field","headerName","headerAlign","flex","sortComparator","v1","v2","Number","renderCell","params","Checkbox","checked","value","readOnly","valueFormatter","toLocaleString","style","currency","push","deleteItem","Snackbar","autoHideDuration","elevation","severity","size","startIcon","Paper","rows","pageSize","autoHeight","disableSelectionOnClick","form","maxWidth","display","flexWrap","marginBottom","marginTop","checkbox","alignItems","formatChars","KarangosForm","marca","modelo","cor","ano_fabricacao","Date","getFullYear","importado","placa","preco","karango","setKarango","importadoChecked","setImportadoChecked","snackState","setSnackState","disabled","label","btnSendState","setBtnSendState","setError","isModified","setIsModified","setTitle","useParams","handleInputChange","property","karangoTemp","importadoCheckedTemp","target","newState","toUpperCase","validate","errorTemp","isValid","trim","includes","isNaN","put","post","Alert","props","handleSnackClose","reason","onSubmit","preventDefault","saveData","TextField","onChange","fullWidth","required","helperText","select","i","years","map","year","type","onFocus","InputProps","startAdornment","InputAdornment","mask","FormControl","FormControlLabel","control","createMuiTheme","main","yellow","pink","box","default","paddingBotton","routed","padding","fontFamily","typography","Main","Box","path","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81e37545.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/karangos.637f9a06.png\";","import React from 'react';\r\n//import Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    menuLink: {\r\n\r\n        color: theme.palette.text.primary,\r\n        textDecoration: 'none'\r\n    }\r\n  }));\r\n\r\nexport default function MainMenu() {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/*<Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                Open Menu\r\n            </Button>*/}\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={handleClose}>\r\n                    <Link to=\"/list\" className={classes.menuLink}>Listagem de Karangos</Link>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>\r\n                    <Link to=\"/new\" className={classes.menuLink}>Cadastrar Novo Karango</Link>\r\n                </MenuItem>\r\n                {/*<MenuItem onClick={handleClose}>Logout</MenuItem>*/}\r\n            </Menu>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n//import Typography from '@material-ui/core/Typography';\r\n//import IconButton from '@material-ui/core/IconButton';\r\n//import MenuIcon from '@material-ui/icons/Menu';\r\nimport logoImg from '../img/karangos.png'\r\nimport MainMenu from './MainMenu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  logo: {\r\n    width: '300px'\r\n  }\r\n}));\r\n\r\nexport default function TopBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar >\r\n          {/*<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>*/}\r\n            <MainMenu/>\r\n            <img src={logoImg} className={classes.logo} alt=\"Logotipo Karangos\"/>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import { Typography } from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LocalCafeTwoToneIcon from '@material-ui/icons/LocalCafeTwoTone';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    text: {\r\n        //backgroundColor: 'yellow',\r\n        width: '100%',\r\n        color: theme.palette.text.secondary\r\n    },\r\n    toolbar: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        minHeight: '40px',\r\n        // Posicionando a barra no rodapé da página\r\n        width: '100%',\r\n        position: 'fixed',\r\n        bottom: 0\r\n    },\r\n    link: {\r\n        color: theme.palette.secondary.light,\r\n        textDecoration: 'none',         // tira o sublinhado do link\r\n        '&:hover': {                    // mouse passando sobre o link\r\n            textDecoration: 'underline' // retorna o sublinhado\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function FooterBar() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Toolbar className={classes.toolbar}>\r\n            <Typography variant=\"caption\" align=\"center\" className={classes.text}>\r\n                Desenvolvido com <LocalCafeTwoToneIcon fontSize=\"small\"/> por<a href=\"mailto:professor@faustocintra.com.br\" className={classes.link}>Prof. Fausto Cintra</a>\r\n            </Typography>\r\n        </Toolbar>\r\n    )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function ConfirmDialog({ title = 'Alerta', isOpen = false, onClose, children }) {\r\n  /*\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  */\r\n\r\n  const handleClose = (result) => {\r\n    // Só chama a função onClose se a prop correspondente tiver sido passada\r\n    if (onClose) onClose(result);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/*<Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open alert dialog\r\n      </Button>*/}\r\n      <Dialog\r\n        open={isOpen}\r\n        onClose={() => handleClose(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n           {children}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleClose(true)} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n          <Button onClick={() => handleClose(false)} color=\"primary\" autoFocus>\r\n            Cancelar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { useHistory } from 'react-router-dom'\r\nimport ConfirmDialog from '../ui/ConfirmDialog'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  dataGrid: {\r\n    '& .MuiDataGrid-row button': {       // Esconde os botões na linha de tabela \"normal\"\r\n      visibility: 'hidden'\r\n    },\r\n    '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\r\n      visibility: 'visible'\r\n    }\r\n  },\r\n  toolbar: {\r\n    justifyContent: 'flex-end',\r\n    paddingRight: 0,\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nexport default function KarangosList() {\r\n  const classes = useStyles()\r\n\r\n  // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\r\n  const [karangos, setKarangos] = useState([])\r\n  const [deletable, setDeletable] = useState()        // Código do registro a ser excluído\r\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\r\n  const [sbOpen, setSbOpen] = useState(false)\r\n  const [sbSeverity, setSbSeverity] = useState('success')\r\n  const [sbMessage, setSbMessage] = useState('Exclusão realizada com sucesso.')\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    \r\n    getData()\r\n  }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\r\n  // é executado apenas uma vez, no carregamento inicial do componente\r\n\r\n  async function getData() {\r\n    try { // tenta buscar os dados\r\n      let response = await axios.get('https://api.faustocintra.com.br/karangos?by=marca,modelo')\r\n      if (response.data.length > 0) setKarangos(response.data)\r\n    }\r\n    catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  async function deleteItem() {\r\n    try {\r\n      await axios.delete(`https://api.faustocintra.com.br/karangos/${deletable}`)\r\n      getData()     // Atualiza os dados da tabela\r\n      setSbSeverity('success')\r\n      setSbMessage('Exclusão efetuada com sucesso.')\r\n    }\r\n    catch (error) {\r\n      setSbSeverity('error')\r\n      setSbMessage('ERRO: ' + error.message)\r\n    }\r\n    setSbOpen(true)   // Exibe a snackbar\r\n  }\r\n\r\n  function handleDialogClose(result) {\r\n    setDialogOpen(false)\r\n\r\n    // Se o usuário concordou com a exclusão \r\n    if (result) deleteItem()\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    setDeletable(id)\r\n    setDialogOpen(true)\r\n  }\r\n\r\n  function handleSbClose() {\r\n    setSbOpen(false)    // Fecha a snackbar\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'Cód.',\r\n      align: 'right',\r\n      headerAlign: 'right',\r\n      flex: true,\r\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\r\n    },\r\n    {\r\n      field: 'marca',\r\n      headerName: 'Marca',\r\n      flex: true\r\n    },\r\n    {\r\n      field: 'modelo',\r\n      headerName: 'Modelo',\r\n      flex: true\r\n    },\r\n    {\r\n      field: 'cor',\r\n      headerName: 'Cor',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      flex: true\r\n    },\r\n    {\r\n      field: 'ano_fabricacao',\r\n      headerName: 'Ano',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      flex: true,\r\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\r\n    },\r\n    {\r\n      field: 'importado',\r\n      headerName: 'Importado?',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      flex: true,\r\n      renderCell: params => (\r\n        <Checkbox checked={params.value === \"1\"} readOnly />\r\n      )\r\n    },\r\n    {\r\n      field: 'placa',\r\n      headerName: 'Placa',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      flex: true\r\n    },\r\n    {\r\n      field: 'preco',\r\n      headerName: 'Preço',\r\n      align: 'right',\r\n      headerAlign: 'right',\r\n      flex: true,\r\n      valueFormatter: params => (\r\n        Number(params.value).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })\r\n      ),\r\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\r\n    },\r\n    {\r\n      field: 'editar',\r\n      headerName: 'Editar',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      flex: true,\r\n      renderCell: params => (\r\n        <IconButton aria-label=\"editar\" onClick={() => history.push(`/edit/${params.id}`)}>\r\n          <EditIcon />\r\n        </IconButton>\r\n      )\r\n    },\r\n    {\r\n      field: 'excluir',\r\n      headerName: 'Excluir',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      flex: true,\r\n      renderCell: params => (\r\n        <IconButton aria-label=\"excluir\" onClick={() => handleDelete(params.id)}>\r\n          <DeleteIcon color=\"error\" />\r\n        </IconButton>\r\n      )\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <ConfirmDialog\r\n        isOpen={dialogOpen}\r\n        onClose={handleDialogClose}>\r\n        Deseja realmente excluir este karango?\r\n      </ConfirmDialog>\r\n\r\n      <Snackbar\r\n        open={sbOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSbClose}>\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          onClose={handleSbClose}\r\n          severity={sbSeverity}>\r\n          {sbMessage}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <h1>Listagem de Karangos</h1>\r\n      <Toolbar\r\n        className={classes.toolbar}>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          startIcon={<AddBoxIcon />} onClick={() => history.push('/new')}>\r\n          Novo Karango\r\n        </Button>\r\n      </Toolbar>\r\n      <Paper\r\n        elevation={4}>\r\n        <DataGrid\r\n          className={classes.dataGrid}\r\n          rows={karangos}\r\n          columns={columns}\r\n          pageSize={5}\r\n          autoHeight={true}\r\n          disableSelectionOnClick={true} />\r\n      </Paper>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Checkbox, FormControl, FormControlLabel, Toolbar } from '@material-ui/core';\r\nimport InputMask from 'react-input-mask';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport ConfirmDialog from '../ui/ConfirmDialog';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        //backgroundColor: 'green',  // Cor de debug\r\n        maxWidth: '80%',\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        flexWrap: 'wrap',\r\n        '& .MuiFormControl-root': {\r\n            minWidth: '200px',\r\n            maxWidth: '500px',\r\n            marginBottom: '24px'\r\n        }\r\n    },\r\n    toolbar: {\r\n        marginTop: '36px',\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n    },\r\n    checkbox: {\r\n        alignItems: 'center'\r\n    }\r\n}))\r\n\r\n/* \r\nClasses de caracteres de entrada para a máscara do campo placa\r\n    1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\r\n    2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\r\n    3) 2ª posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\r\n*/\r\n\r\n// Representando as classes de caracteres da máscara como um objeto\r\nconst formatChars = {\r\n    'A': '[A-Za-z]',\r\n    '0': '[0-9]',\r\n    '#': '[0-9A-Ja-j]'\r\n}\r\n\r\n// Finalmente, a máscara de entrada do campo placa\r\nconst placaMask = 'AAA-0#00'\r\n\r\n// Máscara para CPF: '000.000.000-00'\r\n// Máscara para CNPJ: '00.000.000/0000-00'\r\n\r\n\r\nexport default function KarangosForm() {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [karango, setKarango] = useState({\r\n        id: null,\r\n        marca: '',\r\n        modelo: '',\r\n        cor: '',\r\n        ano_fabricacao: (new Date()).getFullYear(),  // Ano corrente\r\n        importado: '0',\r\n        placa: '',\r\n        preco: 0\r\n    })\r\n\r\n    const [currentId, setCurrentId] = useState()\r\n    const [importadoChecked, setImportadoChecked] = useState()\r\n\r\n    const [snackState, setSnackState] = useState({\r\n        open: false,\r\n        severity: 'success',\r\n        message: 'Karango salvo com sucesso.'\r\n    })\r\n\r\n    const [btnSendState, setBtnSendState] = useState({\r\n        disabled: false,\r\n        label: 'Enviar'\r\n    })\r\n\r\n    const [error, setError] = useState({\r\n        marca: '',\r\n        modelo: '',\r\n        cor: '',\r\n        placa: '',\r\n        preco: ''\r\n    })\r\n\r\n    const [isModified, setIsModified] = useState(false)\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\r\n\r\n    const [title, setTitle] = useState('Cadastrar Novo Karango')\r\n\r\n    const history = useHistory()\r\n    const params = useParams()\r\n\r\n    useEffect(() => {\r\n\r\n        // Verificac se tem o parâmetro id na rota. Se tiver, temos que buscar\r\n        // os dados do registro no back-end para edição\r\n        if (params.id) {\r\n            setTitle('Editando Karango')\r\n            getData(params.id)\r\n        }\r\n    }, [])\r\n\r\n    async function getData(id) {\r\n        try {\r\n            let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`)\r\n            setKarango(response.data)\r\n        }\r\n        catch (error) {\r\n            setSnackState({\r\n                open: true,\r\n                severity: 'error',\r\n                message: 'Não foi possível carregar os dados para edição.'\r\n            })\r\n        }\r\n    }\r\n\r\n    function handleInputChange(event, property) {\r\n\r\n        const karangoTemp = { ...karango }\r\n        let importadoCheckedTemp = importadoChecked\r\n\r\n        // Se houver id no event.target, ele será o nome da propriedade\r\n        // senão, usaremos o valor do segundo parâmetro\r\n        if (event.target.id) property = event.target.id\r\n\r\n        if (property === 'importado') {\r\n            const newState = !importadoChecked\r\n            //setKarango({ ...karango, importado: (newState ? '1' : '0') })\r\n            karangoTemp.importado = (newState ? '1' : '0')\r\n\r\n            //setImportadoChecked(newState)\r\n            importadoCheckedTemp = newState\r\n        }\r\n        else if (property === 'placa') {\r\n            //setKarango({ ...karango, [property]: event.target.value.toUpperCase() })\r\n            karangoTemp[property] = event.target.value.toUpperCase()\r\n        }\r\n        else {\r\n            // Quando o nome de uma propriedade de um objeto aparece entre [],\r\n            // isso se chama \"propriedade calculada\". O nome da propriedade vai\r\n            // corresponder à avaliação da expressão entre os colchetes\r\n            //setCurrentId(event.target.id)\r\n            //setKarango({ ...karango, [property]: event.target.value })\r\n            karangoTemp[property] = event.target.value\r\n        }\r\n        setKarango(karangoTemp)\r\n        setImportadoChecked(importadoCheckedTemp)\r\n        setIsModified(true)   // O formulário foi modificado\r\n        validate(karangoTemp)       // Dispara a validação\r\n    }\r\n\r\n    function validate(data) {\r\n\r\n        const errorTemp = {\r\n            marca: '',\r\n            modelo: '',\r\n            cor: '',\r\n            placa: '',\r\n            preco: ''\r\n        }\r\n        let isValid = true\r\n\r\n        // Validação do campo marca\r\n        if (data.marca.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\r\n            errorTemp.marca = 'A marca deve ser preenchida'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo modelo\r\n        if (data.modelo.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\r\n            errorTemp.modelo = 'A modelo deve ser preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo cor\r\n        if (data.cor.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\r\n            errorTemp.cor = 'Escolha uma cor'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo placa\r\n        // valor válido não pode ser string vazia e nem conter o caracter _ (sublinhado)\r\n        if (data.placa.trim() === '' || data.placa.includes('_')) {     // trim(): retira os espaços em branco do nício e do final de uma string\r\n            errorTemp.placa = 'A placa deve ser corretamente preenchida'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo preco\r\n        if (isNaN(data.preco) || Number(data.preco) <= 0) {     // trim(): retira os espaços em branco do nício e do final de uma string\r\n            errorTemp.preco = 'O preço deve ser preenchido e maior que zero'\r\n            isValid = false\r\n        }\r\n\r\n        setError(errorTemp)\r\n        return isValid\r\n\r\n\r\n    }\r\n\r\n    function years() {\r\n        let result = []\r\n        for (let i = (new Date()).getFullYear(); i >= 1900; i--) result.push(i)\r\n        return result\r\n    }\r\n\r\n    async function saveData() {\r\n        try {\r\n            // Desabilitar o botão Enviar\r\n            setBtnSendState({ disabled: true, label: 'Enviando...' })\r\n\r\n            // Se o registro já existe (edição)\r\n            if (params.id) await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango)\r\n\r\n            // Registro não existe, cria um novo (verbo HTTP POST)\r\n            else await axios.post(`https://api.faustocintra.com.br/karangos`, karango)\r\n\r\n            //alert('Dados salvos com sucesso!')\r\n            setSnackState({\r\n                open: true,\r\n                severity: 'success',\r\n                message: 'Karango salvo com sucesso!'\r\n            })\r\n            // A FAZER: retornar à página de listagem\r\n        }\r\n        catch (error) {\r\n            //alert('ERRO: ' + error.message)\r\n            setSnackState({\r\n                open: true,\r\n                severity: 'error',\r\n                message: 'ERRO: ' + error.message\r\n            })\r\n        }\r\n        // Reabilita o botão Enviar\r\n        setBtnSendState({ disabled: false, label: 'Enviar' })\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n\r\n        event.preventDefault()   // Evitar o recarregamento da página\r\n\r\n        // Só salva os dados se forem válidos\r\n        if (validate(karango)) saveData()\r\n\r\n    }\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n    function handleSnackClose(event, reason) {\r\n        // Evita que a Snackbar seja fechada clicando-se fora dela\r\n        if (reason === 'clickway') return\r\n        setSnackState({ ...snackState, open: false })  // Fecha a Snackbar\r\n\r\n        // Retorna à página de listagem\r\n        history.push('/list')\r\n    }\r\n\r\n    function handleDialogClose(result) {\r\n        setDialogOpen(false)\r\n\r\n        // Se o usuário concordou em voltar \r\n        if (result) history.push('/list')\r\n    }\r\n\r\n    function handleGoBack() {\r\n\r\n        // Se o formulário estiver modificado, mostramos o diálogo de confirmação\r\n        if (isModified) setDialogOpen(true)\r\n\r\n        // Senão, voltamos diretamente à de listagem\r\n        else history.push('/list')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ConfirmDialog\r\n                isOpen={dialogOpen}\r\n                onClose={handleDialogClose}>\r\n                Há dados não salvos. Deseja realmente voltar?\r\n            </ConfirmDialog>\r\n            <Snackbar\r\n                open={snackState.open}\r\n                autoHideDuration={6000}\r\n                onClose={handleSnackClose}>\r\n                <Alert\r\n                    onClose={handleSnackClose}\r\n                    severity={snackState.severity}>\r\n                    {snackState.message}\r\n                </Alert>\r\n            </Snackbar>\r\n            <h1>{title}</h1>\r\n            <form className={classes.form} onSubmit={handleSubmit}>\r\n                <TextField\r\n                    id=\"marca\"\r\n                    label=\"Marca\"\r\n                    variant=\"filled\"\r\n                    value={karango.marca}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.marca !== ''}\r\n                    helperText={error.marca}\r\n                />\r\n                <TextField\r\n                    id=\"modelo\"\r\n                    label=\"Modelo\"\r\n                    variant=\"filled\"\r\n                    value={karango.modelo}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.modelo !== ''}\r\n                    helperText={error.modelo}\r\n                />\r\n                <TextField\r\n                    id=\"cor\"\r\n                    label=\"Cor\"\r\n                    variant=\"filled\"\r\n                    value={karango.cor}\r\n                    onChange={event => handleInputChange(event, 'cor')}\r\n                    select fullWidth\r\n                    required\r\n                    error={error.cor !== ''}\r\n                    helperText={error.cor} >\r\n                    <MenuItem value=\"Amarelo\">Amarelo</MenuItem>\r\n                    <MenuItem value=\"Azul\">Azul</MenuItem>\r\n                    <MenuItem value=\"Bege\">Bege</MenuItem>\r\n                    <MenuItem value=\"Branco\">Branco</MenuItem>\r\n                    <MenuItem value=\"Cinza\">Cinza</MenuItem>\r\n                    <MenuItem value=\"Dourado\">Dourado</MenuItem>\r\n                    <MenuItem value=\"Laranja\">Laranja</MenuItem>\r\n                    <MenuItem value=\"Marrom\">Marrom</MenuItem>\r\n                    <MenuItem value=\"Prata\">Prata</MenuItem>\r\n                    <MenuItem value=\"Preto\">Preto</MenuItem>\r\n                    <MenuItem value=\"Roxo\">Roxo</MenuItem>\r\n                    <MenuItem value=\"Verde\">Verde</MenuItem>\r\n                    <MenuItem value=\"Vermelho\">Vermelho</MenuItem>\r\n                </TextField>\r\n                <TextField\r\n                    id=\"ano_fabricacao\"\r\n                    label=\"Ano de Fabricação\"\r\n                    variant=\"filled\"\r\n                    value={karango.ano_fabricacao}\r\n                    onChange={event => handleInputChange(event, 'ano_fabricacao')}\r\n                    select fullWidth >\r\n                    {years().map(year => <MenuItem value={year} key={year}>{year}</MenuItem>)}\r\n                </TextField>\r\n                <TextField\r\n                    id=\"preco\"\r\n                    label=\"Preço\"\r\n                    variant=\"filled\"\r\n                    value={karango.preco}\r\n                    onChange={handleInputChange}\r\n                    fullWidth type=\"number\"\r\n                    onFocus={event => event.target.select()}\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\r\n                    }}\r\n                    required\r\n                    error={error.preco !== ''}\r\n                    helperText={error.preco}\r\n                />\r\n                <InputMask\r\n                    formatChars={formatChars}\r\n                    mask={placaMask} id=\"placa\"\r\n                    onChange={event => handleInputChange(event, 'placa')}\r\n                    value={karango.placa} >\r\n                    {() => <TextField\r\n                        label=\"Placa\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={error.placa !== ''}\r\n                        helperText={error.placa}\r\n                    />}\r\n                </InputMask>\r\n                <FormControl\r\n                    className={classes.checkbox}\r\n                    fullWidth >\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={importadoChecked}\r\n                            onChange={handleInputChange} id=\"importado\" />}\r\n                        label=\"Importado?\" />\r\n                </FormControl>\r\n                <Toolbar className={classes.toolbar} >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        type=\"submit\"\r\n                        disabled={btnSendState.disabled}>\r\n\r\n                        {btnSendState.label}\r\n\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={handleGoBack} >\r\n                        Voltar\r\n                    </Button>\r\n                </Toolbar>\r\n\r\n                {/* <div>{JSON.stringify(karango)}<br />currentId: {currentId}</div> */}\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","//import logo from './logo.svg';\r\n//import './App.css';\r\n//import Button from '@material-ui/core/Button'\r\nimport TopBar from './ui/TopBar'\r\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\r\nimport yellow from '@material-ui/core/colors/yellow';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport FooterBar from './ui/FooterBar';\r\nimport { Box } from '@material-ui/core';\r\n//import MainMenu from './ui/MainMenu';\r\nimport KarangosList from './routed/KarangosList2';\r\nimport KarangosForm from './routed/KarangosForm';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: yellow[500],\r\n    },\r\n    secondary: {\r\n      main: pink[500],\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    backgroundColor: theme.palette.background.default,\r\n    minHeight: '100vh',   // 100% da altura da área visível\r\n    paddingBotton: '42px' // Para que o conteúdo não fique escondido atrás do footer\r\n  },\r\n  routed: {\r\n    padding: '25px',\r\n    color: theme.palette.text.primary,\r\n    fontFamily: theme.typography.fontFamily\r\n  }\r\n}));\r\n\r\nfunction Main() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.box}>\r\n      <BrowserRouter>\r\n        <TopBar />\r\n        <Box id=\"routed\" className={classes.routed}>\r\n          <Switch>\r\n            <Route path=\"/list\">\r\n              <KarangosList/>\r\n            </Route>\r\n            <Route path=\"/new\">\r\n              <KarangosForm/>\r\n            </Route>\r\n            {/* :id é um parâmetro ( nomes de Parâmetros começam com dois pontos ) */} \r\n            <Route path=\"/edit/:id\">\r\n              <KarangosForm/>\r\n            </Route>\r\n          </Switch>\r\n        </Box>\r\n        <FooterBar />\r\n      </BrowserRouter>\r\n    </Box>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    /*<div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Projeto Karangos</h1>\r\n        <Button variant=\"contained\" color=\"primary\">Click Aqui</Button>\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Learn React</a>\r\n      </header>\r\n    </div>*/\r\n    <div>\r\n      <ThemeProvider theme={theme}>\r\n        <Main />\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}