{"version":3,"sources":["img/karangos.png","ui/MainMenu.js","ui/TopBar.js","ui/FooterBar.js","ui/ConfirmDialog.js","routed/KarangosList2.js","routed/KarangosForm.js","routed/ClienteList.js","routed/ClienteForm.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","menuLink","color","palette","text","primary","textDecoration","MainMenu","classes","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","edge","className","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","to","root","flexGrow","logo","width","TopBar","AppBar","position","Toolbar","src","logoImg","alt","secondary","toolbar","backgroundColor","background","paper","minHeight","bottom","link","light","FooterBar","HomeIcon","props","SvgIcon","d","Typography","variant","style","fontSize","align","green","href","ConfirmDialog","title","isOpen","children","result","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","table","minWidth","dataGrid","visibility","justifyContent","paddingRight","margin","KarangosList","karangos","setKarangos","deletable","setDeletable","dialogOpen","setDialogOpen","sbOpen","setSbOpen","sbSeverity","setSbSeverity","sbMessage","setSbMessage","history","useHistory","getData","a","axios","get","response","data","length","console","error","delete","message","handleSbClose","useEffect","setTimeout","columns","field","headerName","headerAlign","flex","sortComparator","v1","v2","Number","renderCell","params","Checkbox","checked","value","readOnly","valueFormatter","toLocaleString","currency","push","deleteItem","Snackbar","autoHideDuration","elevation","severity","size","startIcon","Paper","rows","pageSize","autoHeight","disableSelectionOnClick","form","maxWidth","display","flexWrap","marginBottom","marginTop","checkbox","alignItems","formatChars","KarangosForm","marca","modelo","cor","ano_fabricacao","Date","getFullYear","importado","placa","preco","karango","setKarango","importadoChecked","setImportadoChecked","snackState","setSnackState","disabled","label","btnSendState","setBtnSendState","setError","isModified","setIsModified","setTitle","useParams","handleInputChange","property","karangoTemp","importadoCheckedTemp","target","newState","toUpperCase","validate","errorTemp","isValid","trim","includes","isNaN","put","post","Alert","handleSnackClose","reason","onSubmit","preventDefault","saveData","TextField","onChange","fullWidth","required","helperText","select","i","years","map","year","type","onFocus","InputProps","startAdornment","InputAdornment","mask","FormControl","FormControlLabel","control","ClienteList","cliente","setCliente","setOpen","setSeverity","setMessage","headerClassName","n1","n2","deleteCliente","textfield","ClienteForm","nome","cpf","rg","logradouro","num_imovel","complemento","bairro","municipio","uf","telefone","email","clienteTemp","toLowerCase","palceholder","createMuiTheme","main","yellow","pink","box","default","paddingBotton","routed","padding","fontFamily","typography","Main","Box","path","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,MAA0B,qC,iECSnCA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,WAAY,CACRC,YAAaF,EAAMG,QAAQ,IAE/BC,SAAU,CAENC,MAAOL,EAAMM,QAAQC,KAAKC,QAC1BC,eAAgB,YAIT,SAASC,IACpB,IAAMC,EAAUb,IAEhB,EAAgCc,IAAMC,SAAS,MAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAc,WAChBD,EAAY,OAGhB,OACI,gCAII,cAACE,EAAA,EAAD,CAAYC,KAAK,QAAQC,UAAWR,EAAQV,WAAYI,MAAM,UAAUe,aAAW,OAAOC,gBAAc,cAAcC,gBAAc,OAAOC,QAb/H,SAACC,GACjBT,EAAYS,EAAMC,gBAYd,SACI,cAAC,IAAD,MAEJ,eAACC,EAAA,EAAD,CACIC,GAAG,cACHb,SAAUA,EACVc,aAAW,EACXC,KAAMC,QAAQhB,GACdiB,QAASf,EALb,UAOI,cAACgB,EAAA,EAAD,CAAUT,QAASP,EAAnB,SACI,cAAC,IAAD,CAAMiB,GAAG,SAASd,UAAWR,EAAQP,SAArC,sCAEJ,cAAC4B,EAAA,EAAD,CAAUT,QAASP,EAAnB,SACI,cAAC,IAAD,CAAMiB,GAAG,QAAQd,UAAWR,EAAQP,SAApC,oCAEJ,cAAC4B,EAAA,EAAD,CAAUT,QAASP,EAAnB,SACI,cAAC,IAAD,CAAMiB,GAAG,QAAQd,UAAWR,EAAQP,SAApC,sCAEJ,cAAC4B,EAAA,EAAD,CAAUT,QAASP,EAAnB,SACI,cAAC,IAAD,CAAMiB,GAAG,OAAOd,UAAWR,EAAQP,SAAnC,yCChDpB,IAAMN,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkC,KAAM,CACJC,SAAU,GAEZlC,WAAY,CACVC,YAAaF,EAAMG,QAAQ,IAE7BiC,KAAM,CACJC,MAAO,aAII,SAASC,IACtB,IAAM3B,EAAUb,IAEhB,OACE,qBAAKqB,UAAWR,EAAQuB,KAAxB,SACE,cAACK,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WAII,cAAC/B,EAAD,IACA,qBAAKgC,IAAKC,EAASxB,UAAWR,EAAQyB,KAAMQ,IAAI,6B,6GC1BtD9C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCO,KAAM,CAEF8B,MAAO,OACPhC,MAAOL,EAAMM,QAAQC,KAAKsC,WAE9BC,QAAS,CACLC,gBAAiB/C,EAAMM,QAAQ0C,WAAWC,MAC1CC,UAAW,OAEXb,MAAO,OACPG,SAAU,QACVW,OAAQ,GAEZC,KAAM,CACF/C,MAAOL,EAAMM,QAAQuC,UAAUQ,MAC/B5C,eAAgB,OAChB,UAAW,CACPA,eAAgB,kBAKb,SAAS6C,IAEpB,SAASC,EAASC,GACd,OACE,cAACC,EAAA,EAAD,2BAAaD,GAAb,aACE,sBAAME,EAAE,2CAMhB,IAAM/C,EAAUb,IAChB,OACI,cAAC2C,EAAA,EAAD,CAAStB,UAAWR,EAAQmC,QAA5B,SACI,eAACa,EAAA,EAAD,CAAYC,QAAQ,UAAUC,MAAO,CAACC,SAAU,IAAIC,MAAM,SAAS5C,UAAWR,EAAQJ,KAAtF,8BACqB,cAAEgD,EAAF,CAAWM,MAAO,CAAExD,MAAO2D,IAAM,MAAQF,SAAU,UADxE,QACsF,cAAC,IAAD,CAAsBD,MAAO,CAAExD,MAAO2D,IAAM,MAAOF,SAAS,UADlJ,QACgK,mBAAGD,MAAO,CAAExD,MAAO2D,IAAM,MAAQC,KAAK,+BAA+B9C,UAAWR,EAAQyC,KAAxF,wC,6LCrC7J,SAASc,GAAT,GAAiF,IAAD,IAAvDC,aAAuD,MAA/C,SAA+C,MAArCC,cAAqC,SAArBrC,EAAqB,EAArBA,QAASsC,EAAY,EAAZA,SAS3ErD,EAAc,SAACsD,GAEfvC,GAASA,EAAQuC,IAGvB,OACE,8BAIE,eAACC,EAAA,EAAD,CACE1C,KAAMuC,EACNrC,QAAS,kBAAMf,GAAY,IAC3BwD,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAACC,GAAA,EAAD,CAAa/C,GAAG,qBAAhB,SAAsCwC,IACtC,cAACQ,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAmBjD,GAAG,2BAAtB,SACE0C,MAGJ,eAACQ,GAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQvD,QAAS,kBAAMP,GAAY,IAAOX,MAAM,UAAhD,gBAGA,cAACyE,EAAA,EAAD,CAAQvD,QAAS,kBAAMP,GAAY,IAAQX,MAAM,UAAU0E,WAAS,EAApE,8B,iCCzBJjF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgF,MAAO,CACLC,SAAU,KAEZC,SAAU,CACR,4BAA6B,CAC3BC,WAAY,UAEd,kCAAmC,CACjCA,WAAY,YAGhBrC,QAAS,CACPsC,eAAgB,WAChBC,aAAc,EACdC,OAAQtF,EAAMG,QAAQ,EAAG,QAId,SAASoF,KACtB,IAAM5E,EAAUb,KAGhB,EAAgCe,mBAAS,IAAzC,mBAAO2E,EAAP,KAAiBC,EAAjB,KACA,EAAkC5E,qBAAlC,mBAAO6E,EAAP,KAAkBC,EAAlB,KACA,EAAoC9E,oBAAS,GAA7C,mBAAO+E,EAAP,KAAmBC,EAAnB,KACA,EAA4BhF,oBAAS,GAArC,mBAAOiF,EAAP,KAAeC,EAAf,KACA,EAAoClF,mBAAS,WAA7C,mBAAOmF,EAAP,KAAmBC,EAAnB,KACA,EAAkCpF,mBAAS,sCAA3C,mBAAOqF,EAAP,KAAkBC,EAAlB,KAEMC,EAAUC,cAXqB,SAmBtBC,IAnBsB,2EAmBrC,4BAAAC,EAAA,+EAEyBC,IAAMC,IAAI,4DAFnC,QAEQC,EAFR,QAGiBC,KAAKC,OAAS,GAAGnB,EAAYiB,EAASC,MAHvD,gDAMIE,QAAQC,MAAR,MANJ,0DAnBqC,kEA6BrC,sBAAAP,EAAA,+EAEUC,IAAMO,OAAN,mDAAyDrB,IAFnE,OAGIY,IACAL,EAAc,WACdE,EAAa,qCALjB,gDAQIF,EAAc,SACdE,EAAa,SAAW,KAAMa,SATlC,QAWEjB,GAAU,GAXZ,0DA7BqC,sBAuDrC,SAASkB,IACPlB,GAAU,GA3CZmB,qBAAU,WAERC,YAAW,kBAAMb,MAAW,OAC3B,IA2CH,IAAMc,EAAU,CACd,CACEC,MAAO,KACPC,WAAY,UACZvD,MAAO,QACPwD,YAAa,QACbC,MAAM,EACNC,eAAgB,SAACC,EAAIC,GAAL,OAAYC,OAAOF,GAAME,OAAOD,GAAM,GAAK,IAE7D,CACEN,MAAO,QACPC,WAAY,QACZE,MAAM,GAER,CACEH,MAAO,SACPC,WAAY,SACZE,MAAM,GAER,CACEH,MAAO,MACPC,WAAY,MACZvD,MAAO,SACPwD,YAAa,SACbC,MAAM,GAER,CACEH,MAAO,iBACPC,WAAY,MACZvD,MAAO,SACPwD,YAAa,SACbC,MAAM,EACNC,eAAgB,SAACC,EAAIC,GAAL,OAAYC,OAAOF,GAAME,OAAOD,GAAM,GAAK,IAE7D,CACEN,MAAO,YACPC,WAAY,aACZvD,MAAO,SACPwD,YAAa,SACbC,MAAM,EACNK,WAAY,SAAAC,GAAM,OAChB,cAACC,EAAA,EAAD,CAAUC,QAA0B,MAAjBF,EAAOG,MAAeC,UAAQ,MAGrD,CACEb,MAAO,QACPC,WAAY,QACZvD,MAAO,SACPwD,YAAa,SACbC,MAAM,GAER,CACEH,MAAO,QACPC,WAAY,WACZvD,MAAO,QACPwD,YAAa,QACbC,MAAM,EACNW,eAAgB,SAAAL,GAAM,OACpBF,OAAOE,EAAOG,OAAOG,eAAe,QAAS,CAAEvE,MAAO,WAAYwE,SAAU,SAE9EZ,eAAgB,SAACC,EAAIC,GAAL,OAAYC,OAAOF,GAAME,OAAOD,GAAM,GAAK,IAE7D,CACEN,MAAO,SACPC,WAAY,SACZvD,MAAO,SACPwD,YAAa,SACbC,MAAM,EACNK,WAAY,SAAAC,GAAM,OAChB,cAAC7G,EAAA,EAAD,CAAYG,aAAW,SAASG,QAAS,kBAAM6E,EAAQkC,KAAR,gBAAsBR,EAAOnG,MAA5E,SACE,cAAC,IAAD,QAIN,CACE0F,MAAO,UACPC,WAAY,UACZvD,MAAO,SACPwD,YAAa,SACbC,MAAM,EACNK,WAAY,SAAAC,GAAM,OAChB,cAAC7G,EAAA,EAAD,CAAYG,aAAW,UAAUG,QAAS,kBA1F1BI,EA0F6CmG,EAAOnG,GAzFxEgE,EAAahE,QACbkE,GAAc,GAFhB,IAAsBlE,GA0FhB,SACE,cAAC,IAAD,CAAYtB,MAAM,eAM1B,OACE,qCACE,cAAC6D,GAAD,CACEE,OAAQwB,EACR7D,QA5GN,SAA2BuC,GACzBuB,GAAc,GAGVvB,GA/C+B,mCA+CvBiE,IAsGV,oDAMA,cAACC,GAAA,EAAD,CACE3G,KAAMiE,EACN2C,iBAAkB,IAClB1G,QAASkF,EAHX,SAIE,cAAC,KAAD,CACEyB,UAAW,EACX9E,QAAQ,SACR7B,QAASkF,EACT0B,SAAU3C,EAJZ,SAKGE,MAIL,sDACA,cAACzD,EAAA,EAAD,CACEtB,UAAWR,EAAQmC,QADrB,SAEE,cAACgC,EAAA,EAAD,CACEzE,MAAM,YACNuD,QAAQ,YACRgF,KAAK,QACLC,UAAW,cAAC,IAAD,IAAgBtH,QAAS,kBAAM6E,EAAQkC,KAAK,SAJzD,4BAQF,cAACQ,EAAA,EAAD,CACEJ,UAAW,EADb,SAEE,cAAC,KAAD,CACEvH,UAAWR,EAAQuE,SACnB6D,KAAMvD,EACN4B,QAASA,EACT4B,SAAU,EACVC,YAAY,EACZC,yBAAyB,S,+DCjN7BpJ,GAAYC,aAAW,iBAAO,CAChCoJ,KAAM,CAEFC,SAAU,MACV9D,OAAQ,SACR+D,QAAS,OACTjE,eAAgB,eAChBkE,SAAU,OACV,yBAA0B,CACtBrE,SAAU,QACVmE,SAAU,QACVG,aAAc,SAGtBzG,QAAS,CACL0G,UAAW,OACXnH,MAAO,OACPgH,QAAS,OACTjE,eAAgB,gBAEpBqE,SAAU,CACNC,WAAY,cAYdC,GAAc,CAChB,EAAK,WACL,EAAK,QACL,IAAK,eAUM,SAASC,KAEpB,IAAMjJ,EAAUb,KAEhB,EAA8Be,mBAAS,CACnCc,GAAI,KACJkI,MAAO,GACPC,OAAQ,GACRC,IAAK,GACLC,gBAAiB,IAAIC,MAAQC,cAC7BC,UAAW,IACXC,MAAO,GACPC,MAAO,IARX,mBAAOC,EAAP,KAAgBC,EAAhB,KAWA,EAAkC1J,qBAAlC,mBACA,GADA,UACgDA,sBAAhD,mBAAO2J,EAAP,KAAyBC,EAAzB,KAEA,EAAoC5J,mBAAS,CACzCgB,MAAM,EACN8G,SAAU,UACV3B,QAAS,+BAHb,mBAAO0D,EAAP,KAAmBC,EAAnB,KAMA,EAAwC9J,mBAAS,CAC7C+J,UAAU,EACVC,MAAO,WAFX,mBAAOC,EAAP,KAAqBC,EAArB,KAKA,EAA0BlK,mBAAS,CAC/BgJ,MAAO,GACPC,OAAQ,GACRC,IAAK,GACLK,MAAO,GACPC,MAAO,KALX,mBAAOvD,EAAP,KAAckE,EAAd,KAQA,EAAoCnK,oBAAS,GAA7C,mBAAOoK,EAAP,KAAmBC,EAAnB,KAEA,EAAoCrK,oBAAS,GAA7C,mBAAO+E,EAAP,KAAmBC,EAAnB,KAEA,EAA0BhF,mBAAS,0BAAnC,mBAAOsD,EAAP,KAAcgH,EAAd,KAEM/E,EAAUC,cACVyB,EAASsD,cA5CoB,4CAwDnC,WAAuBzJ,GAAvB,eAAA4E,EAAA,+EAE6BC,IAAMC,IAAN,mDAAsD9E,IAFnF,OAEY+E,EAFZ,OAGQ6D,EAAW7D,EAASC,MAH5B,gDAMQgE,EAAc,CACV9I,MAAM,EACN8G,SAAU,QACV3B,QAAS,gEATrB,0DAxDmC,sBAsEnC,SAASqE,EAAkB7J,EAAO8J,GAE9B,IAAMC,EAAW,eAAQjB,GACrBkB,EAAuBhB,EAM3B,GAFIhJ,EAAMiK,OAAO9J,KAAI2J,EAAW9J,EAAMiK,OAAO9J,IAE5B,cAAb2J,EAA0B,CAC1B,IAAMI,GAAYlB,EAElBe,EAAYpB,UAAauB,EAAW,IAAM,IAG1CF,EAAuBE,OAIvBH,EAAYD,GAFM,UAAbA,EAEmB9J,EAAMiK,OAAOxD,MAAM0D,cAQnBnK,EAAMiK,OAAOxD,MAEzCsC,EAAWgB,GACXd,EAAoBe,GACpBN,GAAc,GACdU,EAASL,GAGb,SAASK,EAASjF,GAEd,IAAMkF,EAAY,CACdhC,MAAO,GACPC,OAAQ,GACRC,IAAK,GACLK,MAAO,GACPC,MAAO,IAEPyB,GAAU,EAkCd,MA/B0B,KAAtBnF,EAAKkD,MAAMkC,SACXF,EAAUhC,MAAQ,8BAClBiC,GAAU,GAIa,KAAvBnF,EAAKmD,OAAOiC,SACZF,EAAU/B,OAAS,+BACnBgC,GAAU,GAIU,KAApBnF,EAAKoD,IAAIgC,SACTF,EAAU9B,IAAM,kBAChB+B,GAAU,IAKY,KAAtBnF,EAAKyD,MAAM2B,QAAiBpF,EAAKyD,MAAM4B,SAAS,QAChDH,EAAUzB,MAAQ,2CAClB0B,GAAU,IAIVG,MAAMtF,EAAK0D,QAAUzC,OAAOjB,EAAK0D,QAAU,KAC3CwB,EAAUxB,MAAQ,kDAClByB,GAAU,GAGdd,EAASa,GACFC,EApJwB,4CA+JnC,sBAAAvF,EAAA,kEAGQwE,EAAgB,CAAEH,UAAU,EAAMC,MAAO,iBAGrC/C,EAAOnG,GANnB,gCAM6B6E,IAAM0F,IAAN,mDAAsDpE,EAAOnG,IAAM2I,GANhG,6CASmB9D,IAAM2F,KAAN,2CAAuD7B,GAT1E,OAYQK,EAAc,CACV9I,MAAM,EACN8G,SAAU,UACV3B,QAAS,+BAfrB,kDAqBQ2D,EAAc,CACV9I,MAAM,EACN8G,SAAU,QACV3B,QAAS,SAAW,KAAMA,UAxBtC,QA4BI+D,EAAgB,CAAEH,UAAU,EAAOC,MAAO,WA5B9C,2DA/JmC,sBAuMnC,SAASuB,EAAM5I,GACX,OAAO,cAAC,KAAD,aAAUkF,UAAW,EAAG9E,QAAQ,UAAaJ,IAGxD,SAAS6I,GAAiB7K,EAAO8K,GAEd,aAAXA,IACJ3B,EAAc,2BAAKD,GAAN,IAAkB7I,MAAM,KAGrCuE,EAAQkC,KAAK,UAmBjB,OAtLApB,qBAAU,WAIFY,EAAOnG,KACPwJ,EAAS,oBAnDkB,oCAoD3B7E,CAAQwB,EAAOnG,OAEpB,IA+KC,qCACI,cAACuC,GAAD,CACIE,OAAQwB,EACR7D,QApBZ,SAA2BuC,GACvBuB,GAAc,GAGVvB,GAAQ8B,EAAQkC,KAAK,UAcrB,iEAKA,cAACE,GAAA,EAAD,CACI3G,KAAM6I,EAAW7I,KACjB4G,iBAAkB,IAClB1G,QAASsK,GAHb,SAII,cAACD,EAAD,CACIrK,QAASsK,GACT1D,SAAU+B,EAAW/B,SAFzB,SAGK+B,EAAW1D,YAGpB,6BAAK7C,IACL,uBAAMhD,UAAWR,EAAQwI,KAAMoD,SAxDvC,SAAsB/K,GAElBA,EAAMgL,iBAGFZ,EAAStB,IAnMkB,mCAmMRmC,IAmDnB,UACI,cAACC,GAAA,EAAD,CACI/K,GAAG,QACHkJ,MAAM,QACNjH,QAAQ,SACRqE,MAAOqC,EAAQT,MACf8C,SAAUtB,EACVuB,WAAS,EACTC,UAAQ,EACR/F,MAAuB,KAAhBA,EAAM+C,MACbiD,WAAYhG,EAAM+C,QAEtB,cAAC6C,GAAA,EAAD,CACI/K,GAAG,SACHkJ,MAAM,SACNjH,QAAQ,SACRqE,MAAOqC,EAAQR,OACf6C,SAAUtB,EACVuB,WAAS,EACTC,UAAQ,EACR/F,MAAwB,KAAjBA,EAAMgD,OACbgD,WAAYhG,EAAMgD,SAEtB,eAAC4C,GAAA,EAAD,CACI/K,GAAG,MACHkJ,MAAM,MACNjH,QAAQ,SACRqE,MAAOqC,EAAQP,IACf4C,SAAU,SAAAnL,GAAK,OAAI6J,EAAkB7J,EAAO,QAC5CuL,QAAM,EAACH,WAAS,EAChBC,UAAQ,EACR/F,MAAqB,KAAdA,EAAMiD,IACb+C,WAAYhG,EAAMiD,IATtB,UAUI,cAAC/H,EAAA,EAAD,CAAUiG,MAAM,UAAhB,qBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,OAAhB,kBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,OAAhB,kBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,SAAhB,oBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,QAAhB,mBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,UAAhB,qBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,UAAhB,qBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,SAAhB,oBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,QAAhB,mBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,QAAhB,mBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,OAAhB,kBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,QAAhB,mBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,WAAhB,yBAEJ,cAACyE,GAAA,EAAD,CACI/K,GAAG,iBACHkJ,MAAM,0BACNjH,QAAQ,SACRqE,MAAOqC,EAAQN,eACf2C,SAAU,SAAAnL,GAAK,OAAI6J,EAAkB7J,EAAO,mBAC5CuL,QAAM,EAACH,WAAS,EANpB,SA5IZ,WAEI,IADA,IAAItI,EAAS,GACJ0I,GAAK,IAAI/C,MAAQC,cAAe8C,GAAK,KAAMA,IAAK1I,EAAOgE,KAAK0E,GACrE,OAAO1I,EAgJM2I,GAAQC,KAAI,SAAAC,GAAI,OAAI,cAACnL,EAAA,EAAD,CAAUiG,MAAOkF,EAAjB,SAAmCA,GAAPA,QAErD,cAACT,GAAA,EAAD,CACI/K,GAAG,QACHkJ,MAAM,WACNjH,QAAQ,SACRqE,MAAOqC,EAAQD,MACfsC,SAAUtB,EACVuB,WAAS,EAACQ,KAAK,SACfC,QAAS,SAAA7L,GAAK,OAAIA,EAAMiK,OAAOsB,UAC/BO,WAAY,CACRC,eAAgB,cAACC,GAAA,EAAD,CAAgBhL,SAAS,QAAzB,iBAEpBqK,UAAQ,EACR/F,MAAuB,KAAhBA,EAAMuD,MACbyC,WAAYhG,EAAMuD,QAEtB,cAAC,KAAD,CACIV,YAAaA,GACb8D,KArUF,WAqUmB9L,GAAG,QACpBgL,SAAU,SAAAnL,GAAK,OAAI6J,EAAkB7J,EAAO,UAC5CyG,MAAOqC,EAAQF,MAJnB,SAKK,kBAAM,cAACsC,GAAA,EAAD,CACH7B,MAAM,QACNjH,QAAQ,SACRgJ,WAAS,EACTC,UAAQ,EACR/F,MAAuB,KAAhBA,EAAMsD,MACb0C,WAAYhG,EAAMsD,WAG1B,cAACsD,GAAA,EAAD,CACIvM,UAAWR,EAAQ8I,SACnBmD,WAAS,EAFb,SAGI,cAACe,GAAA,EAAD,CACIC,QAAS,cAAC7F,EAAA,EAAD,CAAUC,QAASwC,EACxBmC,SAAUtB,EAAmB1J,GAAG,cACpCkJ,MAAM,iBAEd,eAACpI,EAAA,EAAD,CAAStB,UAAWR,EAAQmC,QAA5B,UACI,cAACgC,EAAA,EAAD,CACIlB,QAAQ,YACRvD,MAAM,YACN+M,KAAK,SACLxC,SAAUE,EAAaF,SAJ3B,SAMKE,EAAaD,QAGlB,cAAC/F,EAAA,EAAD,CACIlB,QAAQ,YACRrC,QApIpB,WAGQ0J,EAAYpF,GAAc,GAGzBO,EAAQkC,KAAK,UA4HN,6BChYpB,IAAMxI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCgF,MAAO,CACHC,SAAU,KAEdC,SAAU,CACN,4BAA6B,CACzBC,WAAY,UAEhB,kCAAmC,CAC/BA,WAAY,YAiBpBrC,QAAS,CACLsC,eAAgB,WAChBC,aAAc,EACdC,OAAQtF,EAAMG,QAAQ,EAAG,QAKlB,SAAS0N,KAEpB,IAAMlN,EAAUb,KAEVsG,EAAUC,cAEhB,EAA8BxF,mBAAS,IAAvC,mBAAOiN,EAAP,KAAgBC,EAAhB,KACA,EAAkClN,qBAAlC,mBAAO6E,EAAP,KAAkBC,EAAlB,KAEA,EAAoC9E,oBAAS,GAA7C,mBAAO+E,EAAP,KAAmBC,EAAnB,KAEA,EAAwBhF,oBAAS,GAAjC,mBAAOgB,EAAP,KAAamM,EAAb,KACA,EAAgCnN,mBAAS,UAAzC,mBAAO8H,EAAP,KAAiBsF,EAAjB,KACA,EAA8BpN,mBAAS,oCAAvC,mBAAOmG,EAAP,KAAgBkH,EAAhB,KAbkC,SAqBnB5H,IArBmB,2EAqBlC,4BAAAC,EAAA,+EAE6BC,IAAMC,IAAI,wDAFvC,QAEYC,EAFZ,QAGqBC,KAAKC,OAAS,GAAGmH,EAAWrH,EAASC,MAH1D,gDAMQE,QAAQC,MAAR,MANR,0DArBkC,kEAgClC,sBAAAP,EAAA,+EAEcC,IAAMO,OAAN,mDAAyDrB,IAFvE,OAGQY,IAEA2H,EAAY,WACZC,EAAW,oCANnB,gDAUQD,EAAY,SACZC,EAAW,SAAW,KAAMlH,SAXpC,QAaIgH,GAAQ,GAbZ,0DAhCkC,sBA4DlC,SAAShN,IACLgN,GAAQ,GA7CZ9G,qBAAU,WACNC,YAAW,kBAAMb,MAAW,OAC7B,IA+CH,IAAMc,EAAwB,CAC1B,CACIC,MAAO,KACP8G,gBAAiB,0BACjB7G,WAAY,KACZvD,MAAO,SACPwD,YAAa,SACblF,MAAO,GAEPoF,eAAgB,SAAC2G,EAAIC,GAAL,OAAYzG,OAAOwG,GAAMxG,OAAOyG,GAAM,GAAK,IAE/D,CACIhH,MAAO,OACPC,WAAY,OACZvD,MAAO,OACPwD,YAAa,OACblF,MAAO,KAGX,CACIgF,MAAO,MACPC,WAAY,MACZvD,MAAO,OACPwD,YAAa,OACblF,MAAO,IAEPoF,eAAgB,SAAC2G,EAAIC,GAAL,OAAYzG,OAAOwG,GAAMxG,OAAOyG,GAAM,GAAK,IAE/D,CACIhH,MAAO,KACPC,WAAY,KACZvD,MAAO,SACPwD,YAAa,SACblF,MAAO,IAEPoF,eAAgB,SAAC2G,EAAIC,GAAL,OAAYzG,OAAOwG,GAAMxG,OAAOyG,GAAM,GAAK,IAE/D,CACIhH,MAAO,aACPC,WAAY,aACZjF,MAAO,KAGX,CACIgF,MAAO,aACPC,WAAY,kBACZjF,MAAO,GAEPoF,eAAgB,SAAC2G,EAAIC,GAAL,OAAYzG,OAAOwG,GAAMxG,OAAOyG,GAAM,GAAK,IAE/D,CACIhH,MAAO,cACPC,WAAY,cACZjF,MAAO,KAGX,CACIgF,MAAO,SACPC,WAAY,SACZjF,MAAO,KAGX,CACIgF,MAAO,YACPC,WAAY,eACZjF,MAAO,KAGX,CACIgF,MAAO,KACPC,WAAY,KACZjF,MAAO,KAGX,CACIgF,MAAO,WACPC,WAAY,WACZjF,MAAO,IAEPoF,eAAgB,SAAC2G,EAAIC,GAAL,OAAYzG,OAAOwG,GAAMxG,OAAOyG,GAAM,GAAK,IAE/D,CACIhH,MAAO,QACPC,WAAY,SACZjF,MAAO,KAGX,CACIgF,MAAO,SACPC,WAAY,SACZvD,MAAO,SACPwD,YAAa,SACblF,MAAO,IAEPwF,WAAY,SAAAC,GAAM,OACd,cAAC7G,EAAA,EAAD,CAAYG,aAAW,SAASG,QAAS,kBAAM6E,EAAQkC,KAAR,iBAAuBR,EAAOnG,MAA7E,SACI,cAAC,IAAD,QAIZ,CACI0F,MAAO,UACPC,WAAY,UACZvD,MAAO,SACPwD,YAAa,SACblF,MAAO,IAEPwF,WAAY,SAAAC,GAAM,OACd,cAAC7G,EAAA,EAAD,CAAYG,aAAW,UAAUG,QAAS,kBAtH3BI,EAsHmDmG,EAAOnG,GArHjFgE,EAAahE,QACbkE,GAAc,GAFlB,IAA2BlE,GAsHf,SACI,cAAC,IAAD,CAAYtB,MAAM,eAMlC,OACI,qCACI,cAAC6D,GAAD,CACIE,OAAQwB,EACR7D,QAxIZ,SAA2BuC,GACvBuB,GAAc,GAGVvB,GApD0B,mCAoDlBgK,IAkIR,oDAMA,cAAC9F,GAAA,EAAD,CACI3G,KAAMA,EACN4G,iBAAkB,IAClB1G,QAASf,EAHb,SAII,cAAC,KAAD,CACI0H,UAAW,EACX9E,QAAQ,SACR7B,QAASf,EACT2H,SAAUA,EAJd,SAKK3B,MAIT,sDAEA,cAACvE,EAAA,EAAD,CACItB,UAAWR,EAAQmC,QADvB,SAEI,cAACgC,EAAA,EAAD,CACIzE,MAAM,YACNuD,QAAQ,YACRgF,KAAK,QACLC,UAAW,cAAC,IAAD,IACXtH,QAAS,kBAAM6E,EAAQkC,KAAK,UALhC,4BAUJ,cAACQ,EAAA,EAAD,CACIJ,UAAW,EADf,SAEI,cAAC,KAAD,CACIvH,UAAWR,EAAQuE,SACnB6D,KAAM+E,EACN1G,QAASA,EACT4B,SAAU,EACVC,YAAY,EACZC,yBAAyB,SC3Q7C,IAAMpJ,GAAYC,aAAW,iBAAO,CAChCoJ,KAAM,CAEFC,SAAU,MACV9D,OAAQ,UACR+D,QAAS,OACTjE,eAAgB,gBAChBkE,SAAU,OACV,yBAA0B,CACtBrE,SAAU,QACVmE,SAAU,QACVG,aAAc,SAGtBzG,QAAS,CACL0G,UAAW,OACXnH,MAAO,OACPgH,QAAS,OACTjE,eAAgB,gBAEpBqE,SAAU,CACNC,WAAY,UAEhB6E,UAAW,CACPxK,MAAO,SACP1B,MAAO,aAKTsH,GAAc,CAEhB,EAAK,QACL,IAAK,UACL,IAAK,SASM,SAAS6E,KAGpB,IAAM7N,EAAUb,KAEhB,EAA8Be,mBAAS,CACnCc,GAAI,KACJ8M,KAAM,GACNC,IAAK,GACLC,GAAI,GACJC,WAAY,GACZC,WAAY,GACZC,YAAa,GACbC,OAAQ,GACRC,UAAW,GACXC,GAAI,GACJC,SAAU,GACVC,MAAO,KAZX,mBAAOrB,EAAP,KAAgBC,EAAhB,KAeA,EAAoClN,mBAAS,CACzCgB,MAAM,EACN8G,SAAU,UACV3B,QAAS,+BAHb,mBAAO0D,EAAP,KAAmBC,EAAnB,KAMA,EAAwC9J,mBAAS,CAC7C+J,UAAU,EACVC,MAAO,WAFX,mBAAOC,EAAP,KAAqBC,EAArB,KAKA,EAA0BlK,mBAAS,CAC/B4N,KAAM,GACNC,IAAK,GACLC,GAAI,GACJC,WAAY,GACZC,WAAY,GACZC,YAAa,GACbC,OAAQ,GACRC,UAAW,GACXC,GAAI,GACJC,SAAU,GACVC,MAAO,KAXX,mBAAOrI,EAAP,KAAckE,EAAd,KAcA,EAAoCnK,oBAAS,GAA7C,mBAAOoK,EAAP,KAAmBC,EAAnB,KAEA,EAAoCrK,oBAAS,GAA7C,mBAAO+E,EAAP,KAAmBC,EAAnB,KAEA,EAA0BhF,mBAAS,qBAAnC,mBAAOsD,EAAP,KAAcgH,EAAd,KAGM/E,EAAUC,cACVyB,EAASsD,cArDmB,4CAkElC,WAAuBzJ,GAAvB,eAAA4E,EAAA,+EAE6BC,IAAMC,IAAN,mDAAsD9E,IAFnF,OAEY+E,EAFZ,OAGQqH,EAAWrH,EAASC,MAH5B,gDAMQgE,EAAc,CACV9I,MAAM,EACN8G,SAAU,QACV3B,QAAS,gEATrB,0DAlEkC,sBAgFlC,SAASqE,EAAkB7J,EAAO8J,GAE9B,IAAM8D,EAAW,eAAQtB,GAErBtM,EAAMiK,OAAO9J,KAAI2J,EAAW9J,EAAMiK,OAAO9J,IAIzCyN,EAAY9D,GAFE,QAAbA,GAAqC,aAAbA,GAA0C,OAAbA,EAE9B9J,EAAMiK,OAAOxD,MAEjB,OAAbqD,EAEiB9J,EAAMiK,OAAOxD,MAAM0D,cAEvB,UAAbL,EAEiB9J,EAAMiK,OAAOxD,MAAMoH,cAIvB7N,EAAMiK,OAAOxD,MAErC8F,EAAWqB,GACXlE,GAAc,GACdU,EAASwD,GAIb,SAASxD,EAASjF,GAEd,IAAMkF,EAAY,CACd4C,KAAM,GACNC,IAAK,GACLC,GAAI,GACJC,WAAY,GACZC,WAAY,GACZC,YAAa,GACbC,OAAQ,GACRC,UAAW,GACXC,GAAI,GACJC,SAAU,GACVC,MAAO,IAKPrD,GAAU,EAmEd,MAhEyB,KAArBnF,EAAK8H,KAAK1C,SACVF,EAAU4C,KAAO,6BACjB3C,GAAU,IAIU,KAApBnF,EAAK+H,IAAI3C,QAAiBpF,EAAK+H,IAAI1C,SAAS,QAC5CH,EAAU6C,IAAM,yCAChB5C,GAAU,IAIS,KAAnBnF,EAAKgI,GAAG5C,QAAiBpF,EAAKgI,GAAG3C,SAAS,QAC1CH,EAAU8C,GAAK,wCACf7C,GAAU,GAIiB,KAA3BnF,EAAKiI,WAAW7C,SAChBF,EAAU+C,WAAa,mCACvB9C,GAAU,GAIkB,KAA5BnF,EAAKmI,YAAY/C,SACjBF,EAAUiD,YAAc,yBACxBhD,GAAU,GAIa,KAAvBnF,EAAKoI,OAAOhD,SACZF,EAAUkD,OAAS,+BACnBjD,GAAU,GAIgB,KAA1BnF,EAAKqI,UAAUjD,SACfF,EAAUmD,UAAY,qCACtBlD,GAAU,GAIS,KAAnBnF,EAAKsI,GAAGlD,SACRF,EAAUoD,GAAK,iBACfnD,GAAU,IAIe,KAAzBnF,EAAKuI,SAASnD,QAAiBpF,EAAKuI,SAASlD,SAAS,QACtDH,EAAUqD,SAAV,kGACApD,GAAU,GAGVlE,OAAOjB,EAAKkI,aAAe,IAC3BhD,EAAUgD,WAAa,yEACvB/C,GAAU,KAGTnF,EAAKwI,MAAMnD,SAAS,MAA8B,KAAtBrF,EAAKwI,MAAMpD,QAAiBpF,EAAKwI,MAAMvI,QAAU,KAC9EiF,EAAUsD,MAAQ,4CAClBrD,GAAU,GAGdd,EAASa,GACFC,EAjMuB,4CAqMlC,sBAAAvF,EAAA,kEAGQwE,EAAgB,CAAEH,UAAU,EAAMC,MAAO,iBAGrC/C,EAAOnG,GANnB,gCAOkB6E,IAAM0F,IAAN,mDAAsDpE,EAAOnG,IAAMmM,GAPrF,6CAWkBtH,IAAM2F,KAAN,2CAAuD2B,GAXzE,OAcQnD,EAAc,CACV9I,MAAM,EACN8G,SAAU,UACV3B,QAAS,+BAjBrB,kDAuBQ2D,EAAc,CACV9I,MAAM,EACN8G,SAAU,QACV3B,QAAS,SAAW,KAAMA,UA1BtC,QA8BI+D,EAAgB,CAAEH,UAAU,EAAOC,MAAO,WA9B9C,2DArMkC,sBA8OlC,SAASuB,EAAM5I,GACX,OAAO,cAAC,KAAD,aAAUkF,UAAW,EAAG9E,QAAQ,UAAaJ,IAGxD,SAAS6I,EAAiB7K,EAAO8K,GAEd,aAAXA,IACJ3B,EAAc,2BAAKD,GAAN,IAAkB7I,MAAM,KAGrCuE,EAAQkC,KAAK,WAmBjB,OApNApB,qBAAU,WAIFY,EAAOnG,KACPwJ,EAAS,oBA5DiB,oCA6D1B7E,CAAQwB,EAAOnG,OAEpB,IA6MC,qCACI,cAACuC,GAAD,CACIE,OAAQwB,EACR7D,QApBZ,SAA2BuC,GACvBuB,GAAc,GAGVvB,GAAQ8B,EAAQkC,KAAK,WAcrB,iEAMA,cAACE,GAAA,EAAD,CACI3G,KAAM6I,EAAW7I,KACjB4G,iBAAkB,IAClB1G,QAASsK,EAHb,SAII,cAACD,EAAD,CACIrK,QAASsK,EACT1D,SAAU+B,EAAW/B,SAFzB,SAGK+B,EAAW1D,YAIpB,6BAAK7C,IAEL,uBAAMhD,UAAWR,EAAQwI,KAAMoD,SAzDvC,SAAsB/K,GAElBA,EAAMgL,iBAEFZ,EAASkC,IA3OiB,mCA2OPrB,IAqDnB,UAEI,cAACC,GAAA,EAAD,CACIvL,UAAWR,EAAQ4N,UACnB5M,GAAG,OACHkJ,MAAM,OACNjH,QAAQ,SACRqE,MAAO6F,EAAQW,KACf9B,SAAUtB,EACVuB,WAAS,EACTC,UAAQ,EACR/F,MAAsB,KAAfA,EAAM2H,KACb3B,WAAYhG,EAAM2H,OAEtB,cAAC,KAAD,CACI9E,YAAaA,GACb8D,KArTJ,iBAsTI9L,GAAG,MACHsG,MAAO6F,EAAQY,IACf/B,SAAU,SAAAnL,GAAK,OAAI6J,EAAkB7J,EAAO,QALhD,SAMK,kBAAM,cAACkL,GAAA,EAAD,CACHvL,UAAWR,EAAQ4N,UACnB1D,MAAM,MACNjH,QAAQ,SACRgJ,WAAS,EACTC,UAAQ,EACR/F,MAAqB,KAAdA,EAAM4H,IACb5B,WAAYhG,EAAM4H,SAG1B,cAAC,KAAD,CACI/E,YAAaA,GACb8D,KApUL,eAqUK9L,GAAG,KACHsG,MAAO6F,EAAQa,GACfhC,SAAU,SAAAnL,GAAK,OAAI6J,EAAkB7J,EAAO,OALhD,SAMK,kBAAM,cAACkL,GAAA,EAAD,CACHvL,UAAWR,EAAQ4N,UACnB1D,MAAM,KACNjH,QAAQ,SACRgJ,WAAS,EACTC,UAAQ,EACR/F,MAAoB,KAAbA,EAAM6H,GACb7B,WAAYhG,EAAM6H,QAG1B,cAACjC,GAAA,EAAD,CACIvL,UAAWR,EAAQ4N,UACnB5M,GAAG,aACHkJ,MAAM,aACNjH,QAAQ,SACRqE,MAAO6F,EAAQc,WACfjC,SAAUtB,EACVuB,WAAS,EACTC,UAAQ,EACR/F,MAA4B,KAArBA,EAAM8H,WACb9B,WAAYhG,EAAM8H,aAEtB,cAAClC,GAAA,EAAD,CACIvL,UAAWR,EAAQ4N,UACnB5M,GAAG,aACHkJ,MAAM,sBACNjH,QAAQ,SACRqE,MAAO6F,EAAQe,WACflC,SAAUtB,EACVuB,WAAS,EACTC,UAAQ,EACR/F,MAA4B,KAArBA,EAAM+H,WACb/B,WAAYhG,EAAM+H,aAEtB,cAACnC,GAAA,EAAD,CACIvL,UAAWR,EAAQ4N,UACnB5M,GAAG,cACHkJ,MAAM,cACNjH,QAAQ,SACRqE,MAAO6F,EAAQgB,YACfnC,SAAUtB,EACVuB,WAAS,EACTC,UAAQ,EACR/F,MAA6B,KAAtBA,EAAMgI,YACbhC,WAAYhG,EAAMgI,cAOtB,cAACpC,GAAA,EAAD,CACIvL,UAAWR,EAAQ4N,UACnB5M,GAAG,SACHkJ,MAAM,SACNjH,QAAQ,SACRqE,MAAO6F,EAAQiB,OACfpC,SAAUtB,EACVuB,WAAS,EACTC,UAAQ,EACR/F,MAAwB,KAAjBA,EAAMiI,OACbjC,WAAYhG,EAAMiI,SAEtB,cAACrC,GAAA,EAAD,CACIvL,UAAWR,EAAQ4N,UACnB5M,GAAG,YACHkJ,MAAM,eACNjH,QAAQ,SACRqE,MAAO6F,EAAQkB,UACfrC,SAAUtB,EACVuB,WAAS,EACTC,UAAQ,EACR/F,MAA2B,KAApBA,EAAMkI,UACblC,WAAYhG,EAAMkI,YAEtB,eAACtC,GAAA,EAAD,CACIvL,UAAWR,EAAQ4N,UACnB5M,GAAG,KACHkJ,MAAM,KACNjH,QAAQ,SACRqE,MAAO6F,EAAQmB,GACftC,SAAU,SAAAnL,GAAK,OAAI6J,EAAkB7J,EAAO,OAC5CuL,QAAM,EAACH,WAAS,EAChBC,UAAQ,EACR/F,MAAoB,KAAbA,EAAMmI,GACbnC,WAAYhG,EAAMmI,GAVtB,UAWI,cAACjN,EAAA,EAAD,CAAUiG,MAAM,KAAhB,kBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,qBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,sBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,sBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,mBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,sBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,8BACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,+BACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,sBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,yBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,yBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,gCACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,0BACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,qBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,wBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,uBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,wBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,sBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,4BACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,iCACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,+BACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,yBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,qBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,4BACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,0BACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,qBACA,cAACjG,EAAA,EAAD,CAAUiG,MAAM,KAAhB,0BAGJ,cAAC,KAAD,CACI0B,YAAaA,GACb8D,KA5bH,mBA6bG9L,GAAG,WACHsG,MAAO6F,EAAQoB,SACfvC,SAAU,SAAAnL,GAAK,OAAI6J,EAAkB7J,EAAO,aALhD,SAMK,kBAAM,cAACkL,GAAA,EAAD,CACHvL,UAAWR,EAAQ4N,UACnB1D,MAAM,WACNjH,QAAQ,SACR0L,YAAY,mCACZ1C,WAAS,EACTC,UAAQ,EACR/F,MAA0B,KAAnBA,EAAMoI,SACbpC,WAAYhG,EAAMoI,cAG1B,cAACxC,GAAA,EAAD,CACIvL,UAAWR,EAAQ4N,UACnB5M,GAAG,QACHkJ,MAAM,SACNjH,QAAQ,SACRqE,MAAO6F,EAAQqB,MACfxC,SAAU,SAAAnL,GAAK,OAAI6J,EAAkB7J,EAAO,UAC5CoL,WAAS,EACTC,UAAQ,EACR/F,MAAuB,KAAhBA,EAAMqI,MACbrC,WAAYhG,EAAMqI,QACtB,eAAC1M,EAAA,EAAD,CACItB,UAAWR,EAAQmC,QADvB,UAEI,cAACgC,EAAA,EAAD,CACIlB,QAAQ,YACRvD,MAAM,YACN+M,KAAK,SACLxC,SAAUE,EAAaF,SAJ3B,SAMKE,EAAaD,QAElB,cAAC/F,EAAA,EAAD,CACIlB,QAAQ,YACRrC,QA7NpB,WAGQ0J,EAAYpF,GAAc,GAGzBO,EAAQkC,KAAK,WAqNN,6BCtgBpB,IAAMtI,GAAQuP,YAAe,CAC3BjP,QAAS,CACP8M,KAAM,OACN5M,QAAS,CACPgP,KAAMC,IAAO,MAEf5M,UAAW,CACT2M,KAAME,IAAK,SAKX5P,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2P,IAAK,CACH5M,gBAAiB/C,EAAMM,QAAQ0C,WAAW4M,QAC1C1M,UAAW,QACX2M,cAAe,QAEjBC,OAAQ,CACNC,QAAS,OACT1P,MAAOL,EAAMM,QAAQC,KAAKC,QAC1BwP,WAAYhQ,EAAMiQ,WAAWD,gBAIjC,SAASE,KACP,IAAMvP,EAAUb,KAChB,OACE,cAACqQ,EAAA,EAAD,CAAKhP,UAAWR,EAAQgP,IAAxB,SACE,eAAC,IAAD,WACE,cAACrN,EAAD,IACA,cAAC6N,EAAA,EAAD,CAAKxO,GAAG,SAASR,UAAWR,EAAQmP,OAApC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOM,KAAK,QAAZ,SACE,cAAC7K,GAAD,MAEF,cAAC,IAAD,CAAO6K,KAAK,OAAZ,SACE,cAACxG,GAAD,MAGF,cAAC,IAAD,CAAOwG,KAAK,YAAZ,SACE,cAACxG,GAAD,MAEF,cAAC,IAAD,CAAOwG,KAAK,SAAZ,SACE,cAACvC,GAAD,MAEF,cAAC,IAAD,CAAOuC,KAAK,QAAZ,SACE,cAAC5B,GAAD,MAEF,cAAC,IAAD,CAAO4B,KAAK,aAAZ,SACE,cAAC5B,GAAD,WAIN,cAAClL,EAAD,SA2BO+M,OArBf,WACE,OAYE,aAXA,CAWA,gBACE,cAACC,EAAA,EAAD,CAAetQ,MAAOA,GAAtB,SACE,cAACkQ,GAAD,SCjFOK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.87d0f200.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/karangos.637f9a06.png\";","import React from 'react';\n//import Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    menuLink: {\n\n        color: theme.palette.text.primary,\n        textDecoration: 'none'\n    }\n}));\n\nexport default function MainMenu() {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            {/*<Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                Open Menu\n            </Button>*/}\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                <MenuIcon />\n            </IconButton>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>\n                    <Link to=\"/list2\" className={classes.menuLink}> Registro de Clientes </Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                    <Link to=\"/new2\" className={classes.menuLink}> Cadastrar Clientes </Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                    <Link to=\"/list\" className={classes.menuLink}> Registro de Karangos </Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                    <Link to=\"/new\" className={classes.menuLink}> Cadastrar Karango </Link>\n                </MenuItem>\n                {/*<MenuItem onClick={handleClose}>Logout</MenuItem>*/}\n            </Menu>\n        </div>\n    );\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n//import Typography from '@material-ui/core/Typography';\r\n//import IconButton from '@material-ui/core/IconButton';\r\n//import MenuIcon from '@material-ui/icons/Menu';\r\nimport logoImg from '../img/karangos.png'\r\nimport MainMenu from './MainMenu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  logo: {\r\n    width: '300px'\r\n  }\r\n}));\r\n\r\nexport default function TopBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar >\r\n          {/*<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>*/}\r\n            <MainMenu/>\r\n            <img src={logoImg} className={classes.logo} alt=\"Logotipo Karangos\"/>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import { Typography } from '@material-ui/core';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LocalCafeRoundedIcon from '@material-ui/icons/LocalCafeRounded';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { green } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        //backgroundColor: 'yellow',\n        width: '100%',\n        color: theme.palette.text.secondary\n    },\n    toolbar: {\n        backgroundColor: theme.palette.background.paper,\n        minHeight: '40px',\n        // Posicionando a barra no rodapé da página\n        width: '100%',\n        position: 'fixed',\n        bottom: 0\n    },\n    link: {\n        color: theme.palette.secondary.light,\n        textDecoration: 'none',         // tira o sublinhado do link\n        '&:hover': {                    // mouse passando sobre o link\n            textDecoration: 'underline' // retorna o sublinhado\n        }\n    }\n}));\n\nexport default function FooterBar() {\n\n    function HomeIcon(props) {\n        return (\n          <SvgIcon {...props}>\n            <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n          </SvgIcon>\n        );\n      }\n\n\n    const classes = useStyles();\n    return (\n        <Toolbar className={classes.toolbar}>\n            <Typography variant=\"caption\" style={{fontSize: 16}}align=\"center\" className={classes.text}>\n                Desenvolvido de  < HomeIcon style={{ color: green[500] }} fontSize =\"small\"/> com <LocalCafeRoundedIcon style={{ color: green[500] }}fontSize=\"small\"/> por <a style={{ color: green[500] }} href=\"https://github.com/JPCarrijo\" className={classes.link}>João Paulo Carrijo</a>\n            </Typography>\n        </Toolbar>\n    )\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function ConfirmDialog({ title = 'Alerta', isOpen = false, onClose, children }) {\r\n  /*\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  */\r\n\r\n  const handleClose = (result) => {\r\n    // Só chama a função onClose se a prop correspondente tiver sido passada\r\n    if (onClose) onClose(result);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/*<Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open alert dialog\r\n      </Button>*/}\r\n      <Dialog\r\n        open={isOpen}\r\n        onClose={() => handleClose(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n           {children}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleClose(true)} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n          <Button onClick={() => handleClose(false)} color=\"primary\" autoFocus>\r\n            Cancelar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { useHistory } from 'react-router-dom'\r\nimport ConfirmDialog from '../ui/ConfirmDialog'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  dataGrid: {\r\n    '& .MuiDataGrid-row button': {       // Esconde os botões na linha de tabela \"normal\"\r\n      visibility: 'hidden'\r\n    },\r\n    '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\r\n      visibility: 'visible'\r\n    }\r\n  },\r\n  toolbar: {\r\n    justifyContent: 'flex-end',\r\n    paddingRight: 0,\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nexport default function KarangosList() {\r\n  const classes = useStyles()\r\n\r\n  // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\r\n  const [karangos, setKarangos] = useState([])\r\n  const [deletable, setDeletable] = useState()        // Código do registro a ser excluído\r\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\r\n  const [sbOpen, setSbOpen] = useState(false)\r\n  const [sbSeverity, setSbSeverity] = useState('success')\r\n  const [sbMessage, setSbMessage] = useState('Exclusão realizada com sucesso.')\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n\r\n    setTimeout(() => getData(), 1000)\r\n  }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\r\n  // é executado apenas uma vez, no carregamento inicial do componente\r\n\r\n  async function getData() {\r\n    try { // tenta buscar os dados\r\n      let response = await axios.get('https://api.faustocintra.com.br/karangos?by=marca,modelo')\r\n      if (response.data.length > 0) setKarangos(response.data)\r\n    }\r\n    catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  async function deleteItem() {\r\n    try {\r\n      await axios.delete(`https://api.faustocintra.com.br/karangos/${deletable}`)\r\n      getData()     // Atualiza os dados da tabela\r\n      setSbSeverity('success')\r\n      setSbMessage('Exclusão efetuada com sucesso.')\r\n    }\r\n    catch (error) {\r\n      setSbSeverity('error')\r\n      setSbMessage('ERRO: ' + error.message)\r\n    }\r\n    setSbOpen(true)   // Exibe a snackbar\r\n  }\r\n\r\n  function handleDialogClose(result) {\r\n    setDialogOpen(false)\r\n\r\n    // Se o usuário concordou com a exclusão \r\n    if (result) deleteItem()\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    setDeletable(id)\r\n    setDialogOpen(true)\r\n  }\r\n\r\n  function handleSbClose() {\r\n    setSbOpen(false)    // Fecha a snackbar\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      field: 'id',\r\n      headerName: 'Cód.',\r\n      align: 'right',\r\n      headerAlign: 'right',\r\n      flex: true,\r\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\r\n    },\r\n    {\r\n      field: 'marca',\r\n      headerName: 'Marca',\r\n      flex: true\r\n    },\r\n    {\r\n      field: 'modelo',\r\n      headerName: 'Modelo',\r\n      flex: true\r\n    },\r\n    {\r\n      field: 'cor',\r\n      headerName: 'Cor',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      flex: true\r\n    },\r\n    {\r\n      field: 'ano_fabricacao',\r\n      headerName: 'Ano',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      flex: true,\r\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\r\n    },\r\n    {\r\n      field: 'importado',\r\n      headerName: 'Importado?',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      flex: true,\r\n      renderCell: params => (\r\n        <Checkbox checked={params.value === \"1\"} readOnly />\r\n      )\r\n    },\r\n    {\r\n      field: 'placa',\r\n      headerName: 'Placa',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      flex: true\r\n    },\r\n    {\r\n      field: 'preco',\r\n      headerName: 'Preço',\r\n      align: 'right',\r\n      headerAlign: 'right',\r\n      flex: true,\r\n      valueFormatter: params => (\r\n        Number(params.value).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })\r\n      ),\r\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\r\n    },\r\n    {\r\n      field: 'editar',\r\n      headerName: 'Editar',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      flex: true,\r\n      renderCell: params => (\r\n        <IconButton aria-label=\"editar\" onClick={() => history.push(`/edit/${params.id}`)}>\r\n          <EditIcon />\r\n        </IconButton>\r\n      )\r\n    },\r\n    {\r\n      field: 'excluir',\r\n      headerName: 'Excluir',\r\n      align: 'center',\r\n      headerAlign: 'center',\r\n      flex: true,\r\n      renderCell: params => (\r\n        <IconButton aria-label=\"excluir\" onClick={() => handleDelete(params.id)}>\r\n          <DeleteIcon color=\"error\" />\r\n        </IconButton>\r\n      )\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <ConfirmDialog\r\n        isOpen={dialogOpen}\r\n        onClose={handleDialogClose}>\r\n        Deseja realmente excluir este karango?\r\n      </ConfirmDialog>\r\n\r\n      <Snackbar\r\n        open={sbOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSbClose}>\r\n        <MuiAlert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          onClose={handleSbClose}\r\n          severity={sbSeverity}>\r\n          {sbMessage}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n\r\n      <h1>Listagem de Karangos</h1>\r\n      <Toolbar\r\n        className={classes.toolbar}>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          startIcon={<AddBoxIcon />} onClick={() => history.push('/new')}>\r\n          Novo Karango\r\n        </Button>\r\n      </Toolbar>\r\n      <Paper\r\n        elevation={4}>\r\n        <DataGrid\r\n          className={classes.dataGrid}\r\n          rows={karangos}\r\n          columns={columns}\r\n          pageSize={5}\r\n          autoHeight={true}\r\n          disableSelectionOnClick={true} />\r\n      </Paper>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Checkbox, FormControl, FormControlLabel, Toolbar } from '@material-ui/core';\r\nimport InputMask from 'react-input-mask';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport ConfirmDialog from '../ui/ConfirmDialog';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        //backgroundColor: 'green',  // Cor de debug\r\n        maxWidth: '80%',\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        flexWrap: 'wrap',\r\n        '& .MuiFormControl-root': {\r\n            minWidth: '200px',\r\n            maxWidth: '500px',\r\n            marginBottom: '24px'\r\n        }\r\n    },\r\n    toolbar: {\r\n        marginTop: '36px',\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n    },\r\n    checkbox: {\r\n        alignItems: 'center'\r\n    }\r\n}))\r\n\r\n/* \r\nClasses de caracteres de entrada para a máscara do campo placa\r\n    1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\r\n    2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\r\n    3) 2ª posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\r\n*/\r\n\r\n// Representando as classes de caracteres da máscara como um objeto\r\nconst formatChars = {\r\n    'A': '[A-Za-z]',\r\n    '0': '[0-9]',\r\n    '#': '[0-9A-Ja-j]'\r\n}\r\n\r\n// Finalmente, a máscara de entrada do campo placa\r\nconst placaMask = 'AAA-0#00'\r\n\r\n// Máscara para CPF: '000.000.000-00'\r\n// Máscara para CNPJ: '00.000.000/0000-00'\r\n\r\n\r\nexport default function KarangosForm() {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [karango, setKarango] = useState({\r\n        id: null,\r\n        marca: '',\r\n        modelo: '',\r\n        cor: '',\r\n        ano_fabricacao: (new Date()).getFullYear(),  // Ano corrente\r\n        importado: '0',\r\n        placa: '',\r\n        preco: 0\r\n    })\r\n\r\n    const [currentId, setCurrentId] = useState()\r\n    const [importadoChecked, setImportadoChecked] = useState()\r\n\r\n    const [snackState, setSnackState] = useState({\r\n        open: false,\r\n        severity: 'success',\r\n        message: 'Karango salvo com sucesso.'\r\n    })\r\n\r\n    const [btnSendState, setBtnSendState] = useState({\r\n        disabled: false,\r\n        label: 'Enviar'\r\n    })\r\n\r\n    const [error, setError] = useState({\r\n        marca: '',\r\n        modelo: '',\r\n        cor: '',\r\n        placa: '',\r\n        preco: ''\r\n    })\r\n\r\n    const [isModified, setIsModified] = useState(false)\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\r\n\r\n    const [title, setTitle] = useState('Cadastrar Novo Karango')\r\n\r\n    const history = useHistory()\r\n    const params = useParams()\r\n\r\n    useEffect(() => {\r\n\r\n        // Verificac se tem o parâmetro id na rota. Se tiver, temos que buscar\r\n        // os dados do registro no back-end para edição\r\n        if (params.id) {\r\n            setTitle('Editando Karango')\r\n            getData(params.id)\r\n        }\r\n    }, [])\r\n\r\n    async function getData(id) {\r\n        try {\r\n            let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`)\r\n            setKarango(response.data)\r\n        }\r\n        catch (error) {\r\n            setSnackState({\r\n                open: true,\r\n                severity: 'error',\r\n                message: 'Não foi possível carregar os dados para edição.'\r\n            })\r\n        }\r\n    }\r\n\r\n    function handleInputChange(event, property) {\r\n\r\n        const karangoTemp = { ...karango }\r\n        let importadoCheckedTemp = importadoChecked\r\n\r\n        // Se houver id no event.target, ele será o nome da propriedade\r\n        // senão, usaremos o valor do segundo parâmetro\r\n        if (event.target.id) property = event.target.id\r\n\r\n        if (property === 'importado') {\r\n            const newState = !importadoChecked\r\n            //setKarango({ ...karango, importado: (newState ? '1' : '0') })\r\n            karangoTemp.importado = (newState ? '1' : '0')\r\n\r\n            //setImportadoChecked(newState)\r\n            importadoCheckedTemp = newState\r\n        }\r\n        else if (property === 'placa') {\r\n            //setKarango({ ...karango, [property]: event.target.value.toUpperCase() })\r\n            karangoTemp[property] = event.target.value.toUpperCase()\r\n        }\r\n        else {\r\n            // Quando o nome de uma propriedade de um objeto aparece entre [],\r\n            // isso se chama \"propriedade calculada\". O nome da propriedade vai\r\n            // corresponder à avaliação da expressão entre os colchetes\r\n            //setCurrentId(event.target.id)\r\n            //setKarango({ ...karango, [property]: event.target.value })\r\n            karangoTemp[property] = event.target.value\r\n        }\r\n        setKarango(karangoTemp)\r\n        setImportadoChecked(importadoCheckedTemp)\r\n        setIsModified(true)   // O formulário foi modificado\r\n        validate(karangoTemp)       // Dispara a validação\r\n    }\r\n\r\n    function validate(data) {\r\n\r\n        const errorTemp = {\r\n            marca: '',\r\n            modelo: '',\r\n            cor: '',\r\n            placa: '',\r\n            preco: ''\r\n        }\r\n        let isValid = true\r\n\r\n        // Validação do campo marca\r\n        if (data.marca.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\r\n            errorTemp.marca = 'A marca deve ser preenchida'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo modelo\r\n        if (data.modelo.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\r\n            errorTemp.modelo = 'A modelo deve ser preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo cor\r\n        if (data.cor.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\r\n            errorTemp.cor = 'Escolha uma cor'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo placa\r\n        // valor válido não pode ser string vazia e nem conter o caracter _ (sublinhado)\r\n        if (data.placa.trim() === '' || data.placa.includes('_')) {     // trim(): retira os espaços em branco do nício e do final de uma string\r\n            errorTemp.placa = 'A placa deve ser corretamente preenchida'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo preco\r\n        if (isNaN(data.preco) || Number(data.preco) <= 0) {     // trim(): retira os espaços em branco do nício e do final de uma string\r\n            errorTemp.preco = 'O preço deve ser preenchido e maior que zero'\r\n            isValid = false\r\n        }\r\n\r\n        setError(errorTemp)\r\n        return isValid\r\n\r\n\r\n    }\r\n\r\n    function years() {\r\n        let result = []\r\n        for (let i = (new Date()).getFullYear(); i >= 1900; i--) result.push(i)\r\n        return result\r\n    }\r\n\r\n    async function saveData() {\r\n        try {\r\n            // Desabilitar o botão Enviar\r\n            setBtnSendState({ disabled: true, label: 'Enviando...' })\r\n\r\n            // Se o registro já existe (edição)\r\n            if (params.id) await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango)\r\n\r\n            // Registro não existe, cria um novo (verbo HTTP POST)\r\n            else await axios.post(`https://api.faustocintra.com.br/karangos`, karango)\r\n\r\n            //alert('Dados salvos com sucesso!')\r\n            setSnackState({\r\n                open: true,\r\n                severity: 'success',\r\n                message: 'Karango salvo com sucesso!'\r\n            })\r\n            // A FAZER: retornar à página de listagem\r\n        }\r\n        catch (error) {\r\n            //alert('ERRO: ' + error.message)\r\n            setSnackState({\r\n                open: true,\r\n                severity: 'error',\r\n                message: 'ERRO: ' + error.message\r\n            })\r\n        }\r\n        // Reabilita o botão Enviar\r\n        setBtnSendState({ disabled: false, label: 'Enviar' })\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n\r\n        event.preventDefault()   // Evitar o recarregamento da página\r\n\r\n        // Só salva os dados se forem válidos\r\n        if (validate(karango)) saveData()\r\n\r\n    }\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n    function handleSnackClose(event, reason) {\r\n        // Evita que a Snackbar seja fechada clicando-se fora dela\r\n        if (reason === 'clickway') return\r\n        setSnackState({ ...snackState, open: false })  // Fecha a Snackbar\r\n\r\n        // Retorna à página de listagem\r\n        history.push('/list')\r\n    }\r\n\r\n    function handleDialogClose(result) {\r\n        setDialogOpen(false)\r\n\r\n        // Se o usuário concordou em voltar \r\n        if (result) history.push('/list')\r\n    }\r\n\r\n    function handleGoBack() {\r\n\r\n        // Se o formulário estiver modificado, mostramos o diálogo de confirmação\r\n        if (isModified) setDialogOpen(true)\r\n\r\n        // Senão, voltamos diretamente à de listagem\r\n        else history.push('/list')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ConfirmDialog\r\n                isOpen={dialogOpen}\r\n                onClose={handleDialogClose}>\r\n                Há dados não salvos. Deseja realmente voltar?\r\n            </ConfirmDialog>\r\n            <Snackbar\r\n                open={snackState.open}\r\n                autoHideDuration={6000}\r\n                onClose={handleSnackClose}>\r\n                <Alert\r\n                    onClose={handleSnackClose}\r\n                    severity={snackState.severity}>\r\n                    {snackState.message}\r\n                </Alert>\r\n            </Snackbar>\r\n            <h1>{title}</h1>\r\n            <form className={classes.form} onSubmit={handleSubmit}>\r\n                <TextField\r\n                    id=\"marca\"\r\n                    label=\"Marca\"\r\n                    variant=\"filled\"\r\n                    value={karango.marca}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.marca !== ''}\r\n                    helperText={error.marca}\r\n                />\r\n                <TextField\r\n                    id=\"modelo\"\r\n                    label=\"Modelo\"\r\n                    variant=\"filled\"\r\n                    value={karango.modelo}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.modelo !== ''}\r\n                    helperText={error.modelo}\r\n                />\r\n                <TextField\r\n                    id=\"cor\"\r\n                    label=\"Cor\"\r\n                    variant=\"filled\"\r\n                    value={karango.cor}\r\n                    onChange={event => handleInputChange(event, 'cor')}\r\n                    select fullWidth\r\n                    required\r\n                    error={error.cor !== ''}\r\n                    helperText={error.cor} >\r\n                    <MenuItem value=\"Amarelo\">Amarelo</MenuItem>\r\n                    <MenuItem value=\"Azul\">Azul</MenuItem>\r\n                    <MenuItem value=\"Bege\">Bege</MenuItem>\r\n                    <MenuItem value=\"Branco\">Branco</MenuItem>\r\n                    <MenuItem value=\"Cinza\">Cinza</MenuItem>\r\n                    <MenuItem value=\"Dourado\">Dourado</MenuItem>\r\n                    <MenuItem value=\"Laranja\">Laranja</MenuItem>\r\n                    <MenuItem value=\"Marrom\">Marrom</MenuItem>\r\n                    <MenuItem value=\"Prata\">Prata</MenuItem>\r\n                    <MenuItem value=\"Preto\">Preto</MenuItem>\r\n                    <MenuItem value=\"Roxo\">Roxo</MenuItem>\r\n                    <MenuItem value=\"Verde\">Verde</MenuItem>\r\n                    <MenuItem value=\"Vermelho\">Vermelho</MenuItem>\r\n                </TextField>\r\n                <TextField\r\n                    id=\"ano_fabricacao\"\r\n                    label=\"Ano de Fabricação\"\r\n                    variant=\"filled\"\r\n                    value={karango.ano_fabricacao}\r\n                    onChange={event => handleInputChange(event, 'ano_fabricacao')}\r\n                    select fullWidth >\r\n                    {years().map(year => <MenuItem value={year} key={year}>{year}</MenuItem>)}\r\n                </TextField>\r\n                <TextField\r\n                    id=\"preco\"\r\n                    label=\"Preço\"\r\n                    variant=\"filled\"\r\n                    value={karango.preco}\r\n                    onChange={handleInputChange}\r\n                    fullWidth type=\"number\"\r\n                    onFocus={event => event.target.select()}\r\n                    InputProps={{\r\n                        startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\r\n                    }}\r\n                    required\r\n                    error={error.preco !== ''}\r\n                    helperText={error.preco}\r\n                />\r\n                <InputMask\r\n                    formatChars={formatChars}\r\n                    mask={placaMask} id=\"placa\"\r\n                    onChange={event => handleInputChange(event, 'placa')}\r\n                    value={karango.placa} >\r\n                    {() => <TextField\r\n                        label=\"Placa\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={error.placa !== ''}\r\n                        helperText={error.placa}\r\n                    />}\r\n                </InputMask>\r\n                <FormControl\r\n                    className={classes.checkbox}\r\n                    fullWidth >\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={importadoChecked}\r\n                            onChange={handleInputChange} id=\"importado\" />}\r\n                        label=\"Importado?\" />\r\n                </FormControl>\r\n                <Toolbar className={classes.toolbar} >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        type=\"submit\"\r\n                        disabled={btnSendState.disabled}>\r\n\r\n                        {btnSendState.label}\r\n\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={handleGoBack} >\r\n                        Voltar\r\n                    </Button>\r\n                </Toolbar>\r\n\r\n                {/* <div>{JSON.stringify(karango)}<br />currentId: {currentId}</div> */}\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import Table from '@material-ui/core/Table';\r\n//import TableBody from '@material-ui/core/TableBody';\r\n//mport TableCell from '@material-ui/core/TableCell';\r\n//import TableContainer from '@material-ui/core/TableContainer';\r\n//import TableHead from '@material-ui/core/TableHead';\r\n//import TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n//import Checkbox from '@material-ui/core/Checkbox'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ConfirmDialog from '../ui/ConfirmDialog';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { DataGrid, GridColDef } from '@material-ui/data-grid';\r\n//import { XGrid } from '@material-ui/x-grid';\r\n\r\n// Constante para estilos de página\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    dataGrid: {\r\n        '& .MuiDataGrid-row button': {       // Esconde os botões na linha de tabela \"normal\"\r\n            visibility: 'hidden',\r\n        },\r\n        '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\r\n            visibility: 'visible'\r\n        },\r\n        /*editButton: {\r\n            color: theme.palette.success.dark,\r\n        },*/\r\n        /*\r\n        tableRow: {\r\n            '& button': {       // Linha da tabela em estado \"normal\"\r\n                visibility: 'hidden'\r\n            },\r\n            '&:hover': {        // Linha da tabela com mouse sobreposto\r\n                backgroundColor: theme.palette.action.hover\r\n            },\r\n            '&:hover button': { // Botões na linha com mouse sobreposto\r\n                visibility: 'visible'\r\n            },*/\r\n    },\r\n    toolbar: {\r\n        justifyContent: 'flex-end',\r\n        paddingRight: 0,\r\n        margin: theme.spacing(2, 0)\r\n    },\r\n\r\n}));\r\n\r\nexport default function ClienteList() {\r\n    // Declaração dos useStates\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory()\r\n\r\n    const [cliente, setCliente] = useState([])\r\n    const [deletable, setDeletable] = useState()\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [severity, setSeverity] = useState('sucess')\r\n    const [message, setMessage] = useState('Cliente excluído com sucesso.')\r\n\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => getData(), 1000)\r\n    }, [])\r\n\r\n    // Função tenta buscar os dados\r\n    async function getData() {\r\n        try {\r\n            let response = await axios.get('https://api.faustocintra.com.br/clientes?by=nome,cpf')\r\n            if (response.data.length > 0) setCliente(response.data)\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    // Função deletar cliente\r\n    async function deleteCliente() {\r\n        try {\r\n            await axios.delete(`https://api.faustocintra.com.br/clientes/${deletable}`)\r\n            getData()   // Atualiza os dados das tabelas\r\n\r\n            setSeverity('success')\r\n            setMessage('Cliente excluído com sucesso.')\r\n        }\r\n        catch (error) {\r\n            //alert(`ERRO: ${error.message}`)\r\n            setSeverity('error')\r\n            setMessage('ERRO: ' + error.message)\r\n        }\r\n        setOpen(true)   // snackbar\r\n    }\r\n\r\n    function handleDialogClose(result) {\r\n        setDialogOpen(false)\r\n\r\n        //  Exclusão pelo usuário\r\n        if (result) deleteCliente()\r\n    }\r\n\r\n    function handleDeleteClick(id) {\r\n        setDeletable(id)\r\n        setDialogOpen(true)\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false)\r\n    }\r\n\r\n    // Colunas da tabela\r\n    const columns: GridColDef[] = [\r\n        {\r\n            field: 'id',\r\n            headerClassName: 'super-app-theme--header',\r\n            headerName: 'ID',\r\n            align: 'center',\r\n            headerAlign: 'center',\r\n            width: 90,\r\n            //flex: true,\r\n            sortComparator: (n1, n2) => Number(n1) > Number(n2) ? 1 : -1\r\n        },\r\n        {\r\n            field: 'nome',\r\n            headerName: 'Nome',\r\n            align: 'left',\r\n            headerAlign: 'left',\r\n            width: 150,\r\n            //flex: true\r\n        },\r\n        {\r\n            field: 'cpf',\r\n            headerName: 'CPF',\r\n            align: 'left',\r\n            headerAlign: 'left',\r\n            width: 125,\r\n            //flex: true,\r\n            sortComparator: (n1, n2) => Number(n1) > Number(n2) ? 1 : -1\r\n        },\r\n        {\r\n            field: 'rg',\r\n            headerName: 'RG',\r\n            align: 'center',\r\n            headerAlign: 'center',\r\n            width: 125,\r\n            //flex: true,\r\n            sortComparator: (n1, n2) => Number(n1) > Number(n2) ? 1 : -1\r\n        },\r\n        {\r\n            field: 'logradouro',\r\n            headerName: 'Logradouro',\r\n            width: 160,\r\n            //flex: true,\r\n        },\r\n        {\r\n            field: 'num_imovel',\r\n            headerName: 'Nº Imóvel',\r\n            width: 90,\r\n            //flex: true,\r\n            sortComparator: (n1, n2) => Number(n1) > Number(n2) ? 1 : -1\r\n        },\r\n        {\r\n            field: 'complemento',\r\n            headerName: 'Complemento',\r\n            width: 150,\r\n            //flex: true\r\n        },\r\n        {\r\n            field: 'bairro',\r\n            headerName: 'Bairro',\r\n            width: 120,\r\n            //flex: true\r\n        },\r\n        {\r\n            field: 'municipio',\r\n            headerName: 'Município',\r\n            width: 150,\r\n            //flex: true\r\n        },\r\n        {\r\n            field: 'uf',\r\n            headerName: 'UF',\r\n            width: 100,\r\n            //flex: true\r\n        },\r\n        {\r\n            field: 'telefone',\r\n            headerName: 'Telefone',\r\n            width: 150,\r\n            //flex: true,\r\n            sortComparator: (n1, n2) => Number(n1) > Number(n2) ? 1 : -1\r\n        },\r\n        {\r\n            field: 'email',\r\n            headerName: 'E-mail',\r\n            width: 260,\r\n            //flex: true\r\n        },\r\n        {\r\n            field: 'editar',\r\n            headerName: 'Editar',\r\n            align: 'center',\r\n            headerAlign: 'center',\r\n            width: 150,\r\n            //flex: true,\r\n            renderCell: params => (\r\n                <IconButton aria-label=\"editar\" onClick={() => history.push(`/edit2/${params.id}`)}>\r\n                    <EditIcon />\r\n                </IconButton>\r\n            )\r\n        },\r\n        {\r\n            field: 'excluir',\r\n            headerName: 'Excluir',\r\n            align: 'center',\r\n            headerAlign: 'center',\r\n            width: 120,\r\n            //flex: true,\r\n            renderCell: params => (\r\n                <IconButton aria-label=\"excluir\" onClick={() => handleDeleteClick(params.id)}>\r\n                    <DeleteIcon color=\"error\" />\r\n                </IconButton>\r\n            )\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <ConfirmDialog\r\n                isOpen={dialogOpen}\r\n                onClose={handleDialogClose}>\r\n                Deseja realmente excluir esse cliente?\r\n            </ConfirmDialog>\r\n\r\n            <Snackbar\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}>\r\n                <MuiAlert\r\n                    elevation={6}\r\n                    variant=\"filled\"\r\n                    onClose={handleClose}\r\n                    severity={severity}>\r\n                    {message}\r\n                </MuiAlert>\r\n            </Snackbar>\r\n\r\n            <h1>Registro de Clientes</h1>\r\n\r\n            <Toolbar\r\n                className={classes.toolbar}>\r\n                <Button\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    startIcon={<AddBoxIcon />}\r\n                    onClick={() => history.push(\"/new2\")}>\r\n                    Novo Cliente\r\n                </Button>\r\n            </Toolbar>\r\n\r\n            <Paper\r\n                elevation={5} >\r\n                <DataGrid\r\n                    className={classes.dataGrid}\r\n                    rows={cliente}\r\n                    columns={columns}\r\n                    pageSize={4}\r\n                    autoHeight={true}\r\n                    disableSelectionOnClick={true} />\r\n            </Paper>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputMask from 'react-input-mask';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport ConfirmDialog from '../ui/ConfirmDialog';\r\n\r\n\r\n// Constante para estilos de página\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        //backgroundColor: 'green',  // Cor de debug\r\n        maxWidth: '90%',\r\n        margin: '0 auto ',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap',\r\n        '& .MuiFormControl-root': {\r\n            minWidth: '170px',\r\n            maxWidth: '800px',\r\n            marginBottom: '20px'\r\n        }\r\n    },\r\n    toolbar: {\r\n        marginTop: '46px',\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n    },\r\n    checkbox: {\r\n        alignItems: 'center'\r\n    },\r\n    textfield: {\r\n        align: 'center',\r\n        width: '550px',\r\n    },\r\n}))\r\n\r\n// Máscara como objeto\r\nconst formatChars = {\r\n\r\n    '9': '[0-9]',\r\n    '*': '[0-9xX]',\r\n    '#': '[9, ]',\r\n}\r\n\r\n// Máscara de entrada\r\nconst cpfMask = '999.999.999-99'\r\nconst rgMask = '99.999.999-*'\r\nconst foneMask = '(99) # 9999-9999'\r\n\r\n\r\nexport default function ClienteForm() {\r\n\r\n    // Declaração dos useStates\r\n    const classes = useStyles()\r\n\r\n    const [cliente, setCliente] = useState({\r\n        id: null,\r\n        nome: '',\r\n        cpf: '',\r\n        rg: '',\r\n        logradouro: '',\r\n        num_imovel: '',\r\n        complemento: '',\r\n        bairro: '',\r\n        municipio: '',\r\n        uf: '',\r\n        telefone: '',\r\n        email: ''\r\n    })\r\n\r\n    const [snackState, setSnackState] = useState({\r\n        open: false,\r\n        severity: 'success',\r\n        message: 'Cliente salvo com sucesso.'\r\n    })\r\n\r\n    const [btnSendState, setBtnSendState] = useState({\r\n        disabled: false,\r\n        label: 'Enviar'\r\n    })\r\n\r\n    const [error, setError] = useState({\r\n        nome: '',\r\n        cpf: '',\r\n        rg: '',\r\n        logradouro: '',\r\n        num_imovel: '',\r\n        complemento: '',\r\n        bairro: '',\r\n        municipio: '',\r\n        uf: '',\r\n        telefone: '',\r\n        email: ''\r\n    })\r\n\r\n    const [isModified, setIsModified] = useState(false)\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\r\n\r\n    const [title, setTitle] = useState('Cadastrar Cliente')\r\n\r\n\r\n    const history = useHistory()\r\n    const params = useParams()\r\n\r\n    useEffect(() => {\r\n\r\n        // Verificac se tem o parâmetro id na rota. Se tiver, temos que buscar\r\n        // os dados do registro no back-end para edição\r\n        if (params.id) {\r\n            setTitle('Editando Cliente')\r\n            getData(params.id)\r\n        }\r\n    }, [])\r\n\r\n    // Funcão de apresentação dos dados para edição com erro\r\n    async function getData(id) {\r\n        try {\r\n            let response = await axios.get(`https://api.faustocintra.com.br/clientes/${id}`)\r\n            setCliente(response.data)\r\n        }\r\n        catch (error) {\r\n            setSnackState({\r\n                open: true,\r\n                severity: 'error',\r\n                message: 'Não foi possível carregar os dados para edição.'\r\n            })\r\n        }\r\n    }\r\n\r\n    function handleInputChange(event, property) {\r\n\r\n        const clienteTemp = { ...cliente }\r\n\r\n        if (event.target.id) property = event.target.id\r\n\r\n        if ((property === 'cpf') || (property === 'telefone') || (property === 'uf')) {\r\n\r\n            clienteTemp[property] = event.target.value\r\n\r\n        } else if (property === 'rg') {\r\n\r\n            clienteTemp[property] = event.target.value.toUpperCase()\r\n\r\n        } else if (property === 'email') {\r\n\r\n            clienteTemp[property] = event.target.value.toLowerCase()\r\n\r\n        } else\r\n\r\n        clienteTemp[property] = event.target.value\r\n\r\n        setCliente(clienteTemp)\r\n        setIsModified(true)\r\n        validate(clienteTemp)\r\n    }\r\n\r\n    // Validação dos inputs\r\n    function validate(data) {\r\n\r\n        const errorTemp = {\r\n            nome: '',\r\n            cpf: '',\r\n            rg: '',\r\n            logradouro: '',\r\n            num_imovel: '',\r\n            complemento: '',\r\n            bairro: '',\r\n            municipio: '',\r\n            uf: '',\r\n            telefone: '',\r\n            email: ''\r\n        }\r\n        const validTemp = {\r\n            telefone: '',\r\n        }\r\n        let isValid = true\r\n\r\n        // Validação do campo nome\r\n        if (data.nome.trim() === '') {     // trim(): retira os espaços em branco do nício e do final de uma string\r\n            errorTemp.nome = 'O nome deve ser preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo cpf\r\n        if (data.cpf.trim() === '' || data.cpf.includes('_')) {\r\n            errorTemp.cpf = 'O CPF deve ser preenchido corretamente'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo rg\r\n        if (data.rg.trim() === '' || data.rg.includes('_')) {\r\n            errorTemp.rg = 'O RG deve ser preenchido corretamente'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo logradouro\r\n        if (data.logradouro.trim() === '') {\r\n            errorTemp.logradouro = 'O logradouro deve ser preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo complemento\r\n        if (data.complemento.trim() === '') {\r\n            errorTemp.complemento = 'Escolha um complemento'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo bairro\r\n        if (data.bairro.trim() === '') {\r\n            errorTemp.bairro = 'O bairro deve ser preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo município\r\n        if (data.municipio.trim() === '') {\r\n            errorTemp.municipio = 'O município deve ser preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo uf\r\n        if (data.uf.trim() === '') {\r\n            errorTemp.uf = 'Escolha uma UF'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo telefone\r\n        if (data.telefone.trim() === '' || data.telefone.includes('_')) {\r\n            errorTemp.telefone = `O telefone deve ser preenchido corretamente - Utilize espaço para não usar o 9 de celular`\r\n            isValid = false\r\n        }\r\n\r\n        if (Number(data.num_imovel) <= 0) {\r\n            errorTemp.num_imovel = 'O número deve ser preenchido corretamente e deve ser maior que zero'\r\n            isValid = false\r\n        }\r\n\r\n        if (!data.email.includes('@') || data.email.trim() === '' || data.email.length <= 5) {\r\n            errorTemp.email = 'O e-mail deve ser preenchido corretemente'\r\n            isValid = false\r\n        }\r\n\r\n        setError(errorTemp)\r\n        return isValid\r\n    }\r\n\r\n    // Função salvar ou editar com erro\r\n    async function saveData() {\r\n        try {\r\n            // Desabilitar o botão Enviar\r\n            setBtnSendState({ disabled: true, label: 'Enviando...' })\r\n\r\n            // Se o registro já existe (edição)\r\n            if (params.id) {\r\n                await axios.put(`https://api.faustocintra.com.br/clientes/${params.id}`, cliente)\r\n            }\r\n            // Registro não existe, cria um novo (verbo HTTP POST)\r\n            else {\r\n                await axios.post(`https://api.faustocintra.com.br/clientes`, cliente)\r\n            }\r\n            //alert('Dados salvos com sucesso!')\r\n            setSnackState({\r\n                open: true,\r\n                severity: 'success',\r\n                message: 'Cliente salvo com sucesso!'\r\n            })\r\n            // A FAZER: retornar à página de listagem\r\n        }\r\n        catch (error) {\r\n            //alert('ERRO: ' + error.message)\r\n            setSnackState({\r\n                open: true,\r\n                severity: 'error',\r\n                message: 'ERRO: ' + error.message\r\n            })\r\n        }\r\n        // Reabilita o botão Enviar\r\n        setBtnSendState({ disabled: false, label: 'Enviar' })\r\n    }\r\n\r\n\r\n    function handleSubmit(event) {\r\n\r\n        event.preventDefault()   // Evitar o recarregamento da página\r\n\r\n        if (validate(cliente)) saveData()\r\n    }\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n    function handleSnackClose(event, reason) {\r\n        // Evita que a Snackbar seja fechada clicando-se fora dela\r\n        if (reason === 'clickway') return\r\n        setSnackState({ ...snackState, open: false })  // Fecha a Snackbar\r\n\r\n        // Retorna à página de listagem\r\n        history.push('/list2')\r\n    }\r\n\r\n    function handleDialogClose(result) {\r\n        setDialogOpen(false)\r\n\r\n        // Se o usuário concordou em voltar \r\n        if (result) history.push('/list2')\r\n    }\r\n\r\n    function handleGoBack() {\r\n\r\n        // Se o formulário estiver modificado, mostramos o diálogo de confirmação\r\n        if (isModified) setDialogOpen(true)\r\n\r\n        // Senão, voltamos diretamente à de listagem\r\n        else history.push('/list2')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ConfirmDialog\r\n                isOpen={dialogOpen}\r\n                onClose={handleDialogClose}>\r\n                Há dados não salvos. Deseja realmente voltar?\r\n            </ConfirmDialog>\r\n\r\n            <Snackbar\r\n                open={snackState.open}\r\n                autoHideDuration={6000}\r\n                onClose={handleSnackClose}>\r\n                <Alert\r\n                    onClose={handleSnackClose}\r\n                    severity={snackState.severity}>\r\n                    {snackState.message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <h1>{title}</h1>\r\n\r\n            <form className={classes.form} onSubmit={handleSubmit} >\r\n\r\n                <TextField\r\n                    className={classes.textfield}\r\n                    id=\"nome\"\r\n                    label=\"Nome\"\r\n                    variant=\"filled\"\r\n                    value={cliente.nome}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.nome !== ''}\r\n                    helperText={error.nome} />\r\n\r\n                <InputMask\r\n                    formatChars={formatChars}\r\n                    mask={cpfMask}\r\n                    id=\"cpf\"\r\n                    value={cliente.cpf}\r\n                    onChange={event => handleInputChange(event, 'cpf')}>\r\n                    {() => <TextField\r\n                        className={classes.textfield}\r\n                        label=\"CPF\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={error.cpf !== ''}\r\n                        helperText={error.cpf} />}\r\n                </InputMask>\r\n\r\n                <InputMask\r\n                    formatChars={formatChars}\r\n                    mask={rgMask}\r\n                    id=\"rg\"\r\n                    value={cliente.rg}\r\n                    onChange={event => handleInputChange(event, 'rg')}>\r\n                    {() => <TextField\r\n                        className={classes.textfield}\r\n                        label=\"RG\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={error.rg !== ''}\r\n                        helperText={error.rg} />}\r\n                </InputMask>\r\n\r\n                <TextField\r\n                    className={classes.textfield}\r\n                    id=\"logradouro\"\r\n                    label=\"Logradouro\"\r\n                    variant=\"filled\"\r\n                    value={cliente.logradouro}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.logradouro !== ''}\r\n                    helperText={error.logradouro} />\r\n\r\n                <TextField\r\n                    className={classes.textfield}\r\n                    id=\"num_imovel\"\r\n                    label=\"Número Imóvel\"\r\n                    variant=\"filled\"\r\n                    value={cliente.num_imovel}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.num_imovel !== ''}\r\n                    helperText={error.num_imovel} />\r\n\r\n                <TextField\r\n                    className={classes.textfield}\r\n                    id=\"complemento\"\r\n                    label=\"Complemento\"\r\n                    variant=\"filled\"\r\n                    value={cliente.complemento}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.complemento !== ''}\r\n                    helperText={error.complemento} />\r\n                    {/* <MenuItem value=\"Casa\">Casa</MenuItem> */}\r\n                    {/* <MenuItem value=\"Apartamento\">Apartamento</MenuItem> */}\r\n                    {/* <MenuItem value=\"Sitio\">Sítio</MenuItem> */}\r\n                    {/* <MenuItem value=\"Chacara\">Chácara</MenuItem> */}\r\n                {/* </TextField> */}\r\n\r\n                <TextField\r\n                    className={classes.textfield}\r\n                    id=\"bairro\"\r\n                    label=\"Bairro\"\r\n                    variant=\"filled\"\r\n                    value={cliente.bairro}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.bairro !== ''}\r\n                    helperText={error.bairro} />\r\n\r\n                <TextField\r\n                    className={classes.textfield}\r\n                    id=\"municipio\"\r\n                    label=\"Município\"\r\n                    variant=\"filled\"\r\n                    value={cliente.municipio}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.municipio !== ''}\r\n                    helperText={error.municipio} />\r\n\r\n                <TextField\r\n                    className={classes.textfield}\r\n                    id=\"uf\"\r\n                    label=\"UF\"\r\n                    variant=\"filled\"\r\n                    value={cliente.uf}\r\n                    onChange={event => handleInputChange(event, 'uf')}\r\n                    select fullWidth\r\n                    required\r\n                    error={error.uf !== ''}\r\n                    helperText={error.uf} >\r\n                    <MenuItem value=\"AC\">Acre</MenuItem>\r\n                    <MenuItem value=\"AL\">Alagoas</MenuItem>\r\n                    <MenuItem value=\"AP\">Amapá</MenuItem>\r\n                    <MenuItem value=\"AM\">Amazonas</MenuItem>\r\n                    <MenuItem value=\"BA\">Bahia</MenuItem>\r\n                    <MenuItem value=\"CE\">Ceará</MenuItem>\r\n                    <MenuItem value=\"DF\">Distrito Federal</MenuItem>\r\n                    <MenuItem value=\"ES\">Espírito Santo</MenuItem>\r\n                    <MenuItem value=\"GO\">Goiás</MenuItem>\r\n                    <MenuItem value=\"MA\">Maranhão</MenuItem>\r\n                    <MenuItem value=\"MG\">Mato Grosso</MenuItem>\r\n                    <MenuItem value=\"MS\">Mato Grosso do Sul</MenuItem>\r\n                    <MenuItem value=\"MG\">Minas Gerais</MenuItem>\r\n                    <MenuItem value=\"PA\">Pará</MenuItem>\r\n                    <MenuItem value=\"PB\">Paraíba</MenuItem>\r\n                    <MenuItem value=\"PR\">Paraná</MenuItem>\r\n                    <MenuItem value=\"PE\">Pernambuco</MenuItem>\r\n                    <MenuItem value=\"PI\">Piauí</MenuItem>\r\n                    <MenuItem value=\"RJ\">Rio de Janeiro</MenuItem>\r\n                    <MenuItem value=\"RN\">Rio Grande do Norte</MenuItem>\r\n                    <MenuItem value=\"RS\">Rio Grande do Sul</MenuItem>\r\n                    <MenuItem value=\"RO\">Rondônia</MenuItem>\r\n                    <MenuItem value=\"RR\">Roraima</MenuItem>\r\n                    <MenuItem value=\"SC\">Santa Catarina</MenuItem>\r\n                    <MenuItem value=\"SP\">São Paulo</MenuItem>\r\n                    <MenuItem value=\"SE\">Sergipe</MenuItem>\r\n                    <MenuItem value=\"TO\">Tocantins</MenuItem>\r\n                </TextField>\r\n\r\n                <InputMask\r\n                    formatChars={formatChars}\r\n                    mask={foneMask}\r\n                    id=\"telefone\"\r\n                    value={cliente.telefone}\r\n                    onChange={event => handleInputChange(event, 'telefone')}>\r\n                    {() => <TextField\r\n                        className={classes.textfield}\r\n                        label=\"Telefone\"\r\n                        variant=\"filled\"\r\n                        palceholder=\"Use as setas para mover o cursor\"\r\n                        fullWidth\r\n                        required\r\n                        error={error.telefone !== ''}\r\n                        helperText={error.telefone} />}\r\n                    </InputMask>\r\n\r\n                <TextField\r\n                    className={classes.textfield}\r\n                    id=\"email\"\r\n                    label=\"E-mail\"\r\n                    variant=\"filled\"\r\n                    value={cliente.email}\r\n                    onChange={event => handleInputChange(event, 'email')}\r\n                    fullWidth\r\n                    required\r\n                    error={error.email !== ''}\r\n                    helperText={error.email} />\r\n                <Toolbar\r\n                    className={classes.toolbar} >\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        type=\"submit\"\r\n                        disabled={btnSendState.disabled} >\r\n\r\n                        {btnSendState.label}\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={handleGoBack} >\r\n                        Voltar\r\n                    </Button>\r\n                </Toolbar>\r\n                {/* <div>{JSON.stringify(cliente)}</div>  */}\r\n            </form>\r\n        </>\r\n    )\r\n}","//import logo from './logo.svg';\n//import './App.css';\n//import Button from '@material-ui/core/Button'\nimport TopBar from './ui/TopBar'\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport yellow from '@material-ui/core/colors/yellow';\nimport pink from '@material-ui/core/colors/pink';\nimport FooterBar from './ui/FooterBar';\nimport { Box } from '@material-ui/core';\n//import MainMenu from './ui/MainMenu';\nimport KarangosList from './routed/KarangosList2';\nimport KarangosForm from './routed/KarangosForm';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ClienteList from './routed/ClienteList';\nimport ClienteForm from './routed/ClienteForm';\n\n\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: yellow[500],\n    },\n    secondary: {\n      main: pink[500],\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    backgroundColor: theme.palette.background.default,\n    minHeight: '100vh',   // 100% da altura da área visível\n    paddingBotton: '42px' // Para que o conteúdo não fique escondido atrás do footer\n  },\n  routed: {\n    padding: '25px',\n    color: theme.palette.text.primary,\n    fontFamily: theme.typography.fontFamily\n  }\n}));\n\nfunction Main() {\n  const classes = useStyles();\n  return (\n    <Box className={classes.box}>\n      <BrowserRouter>\n        <TopBar />\n        <Box id=\"routed\" className={classes.routed}>\n          <Switch>\n            <Route path=\"/list\">\n              <KarangosList />\n            </Route>\n            <Route path=\"/new\">\n              <KarangosForm />\n            </Route>\n            {/* :id é um parâmetro ( nomes de Parâmetros começam com dois pontos ) */}\n            <Route path=\"/edit/:id\">\n              <KarangosForm />\n            </Route>\n            <Route path=\"/list2\">\n              <ClienteList />\n            </Route>\n            <Route path=\"/new2\">\n              <ClienteForm />\n            </Route>\n            <Route path=\"/edit2/:id\">\n              <ClienteForm />\n            </Route>\n          </Switch>\n        </Box>\n        <FooterBar />\n      </BrowserRouter>\n    </Box>\n  )\n}\n\nfunction App() {\n  return (\n    /*<div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Projeto Karangos</h1>\n        <Button variant=\"contained\" color=\"primary\">Click Aqui</Button>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">Learn React</a>\n      </header>\n    </div>*/\n    <div>\n      <ThemeProvider theme={theme}>\n        <Main />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}